Game TODOs
- waypoints
- unit accelleration: units should slowly start to accelerate and to brake when
  moving
- left dbl-click should select ALL units of that type
- end of game - winner ; statistics
- fullscreen mode
- scroll if cursor at the edge of the window
- rewrite fog of war (QCanvas suckz): use QCanvasSprite::hide() on all units
  and. We could also use QCanvas::drawForeground() to get rid of the
  QCanvasSprites. But there is also a problem when scrolling the widget - all
  units are visible for a moment then (until the fow is drawn). Bug is in
  QCanvas: when the widget is scrolled QCanvas does not use double buffering
  let the Cell display black. Don't use a QCanvasSprite for the fog of war.
  Terrible performance.
- BosonPath needs to be improved greatly - in progress
- AI
- BosonCanvas::unitsAtCell() uses QCanvas::collisions() and is therefore quite
  slow. it is used by BosonPath which is not (yet) time critical but it can be
  improved. *maybe* we'll add a QPtrList to all cells which contains all units
  at this cell. So we'd have to use collisions() only to check *which* parts
  (coordinates, rect, whatever) of the cell(s) is occupied by the unit. This
  would improve the speed heavily but adding a QPtrList to every cell would be
  terrible for memory usage... it *might* be worth...
- follow-mode for units
- _much_ better moving for multiple units in group
- BosonCommandWidget should paint the order pixmap only *once* no more. E.g. we
  repaint for setGrayOut() and setProductionCount()
- BosonSpriteCursor::slotAdvance() calls canvas->update(). it should not as it
  hurts performance. But it is necessary for slow game speed :(
- refine minerals/oil
- mine/harvest minerals/oil is only at an experimantal state


Editor (map, unit, scenario) TODOs
- don't place units on invalid tiles (e.g. ship on grass)
- unit editor: check if images are in the directory, provide possibility to copy
  them
- unit editor: add an additional page for the description of the unit (longer
  text - should go into the handbook). Should be able to contain images and so
  on. Maybe use plain docbook or so
- use another options dialog. we MUST NOT provide the possibility to change the
  game speed!!

General TODOs
- zooming (QCanvas::setWorldMatrix()) - mostly done
- SpeciesTheme loads all pixmaps into memory - share it between different
  players (if they have the same themes)
- find out whether signalUnitPropertyChanged() is a good thing at all. Might
  save some performance if we don't use it.
- use typeId = 0 as invalid (NOT -1!)
- add revision (CVS) number of files to the connection protocol. If the versions
  differ then deny connection. This ensures that all clients are at the smae
  version. We need the revision number of each file - how to do add this
  automatically?
  We can do this using static const char filename_id = "$Id:";
- BosonTiles: pehaps use KPixmapSplitter (kdelibs/kdefx)
- IdReloadState also makes Player emit signalUnitChanged() - this might become a
  performance problem!! we need it for BosonCommandWidget
- transmit everything on startup over network (== map, unitProperties). This
  saves us from a cheating player who (maybe just accidently) changed the files
  (units/*/index.desktop especially).
- decrease game speed ; increase unit speed. Saves cpu power
- when scrolling the big display the minerals/oil labels leave a white area
  behind which are repainted a moment later. this white area should not appear
  at all...
- splitViews: we could use one view for players that are allied with the local
  player. we need to transmit the position of the view over network... would be
  a nice idea!
- make sure that kdemultimedia is installed - perhaps disable .ogg support
  somehow if it isn't

Data TODOs
- general sound (e.g. speech) - in progress
- make use of biglogo.png
- shipyard
- airport 
