This is a copy of libufo cvs with a couple of patches applied.

Patches applied currently (this list may not be complete):
- Patch to uboboxlayout.cpp to make multiline labels work
- Patch to utexturefont.cpp to return the correct face in listFonts()
- Patch to uwidget.cpp: call invalidate() in setFont()
- Patch to include/ufo/ufo_gl.hpp and usysteminfo.hpp to include bogl.h instead
  of gl.h and glu.h
- Patch to uthemelookandfeel.cpp to include bogl.h before glx.h
- Patch to ufo/include/ufo/usysteminfo.hpp, ufo/include/ufo/ux/uxglxdriver.hpp
  and ufo/src/ui/uthemelookandfeel.cpp to include boglx.h instead of glx.h
  note that this must be included before X11/Xlib.h
- Patch to fix index underflow in UFontMetrics::viewToModel()
- Patch to ugl_image.cpp to enable blending for images with 4 components
- Patch to uboboxlayout.cpp to make widgets use all remaining space
- Patch to uboboxlayout.cpp to support stretching
- Patch to ulayeredpane.cpp to insert new widgets at the beginning of a layer
  (which makes it the last widget that is painted), if not specified otherwise
- Patch to gl/ugl_graphics.cpp, to fix setClipRect() for invalid rectangles
  after the mapToDevice() call (it could create negative height rects for input
  rects that are larger than the viewport)
- Patch to uwidget.h and uwidget.cpp to take a ufo::UCollectable* as widget
  deleter. This object is deleted at the very first in the d'tor.
- Patch to uthemelookandfeel.cpp to close the X display it opens

Use
 make_ufo_dir.sh ufo_dir code/ufo
from the tools module (boson cvs) to update this directory (all changes will be lost!).

This copy of libufo is required because of several reasons:
- libufo can not (because of it's current development state) preserve binary
  compatibility and not even source compatibility among releases. Therefore
  boson must compile _exactly_ against a certain version of libufo (a more recent
  version may not work anymore)
  -> this is a lot of work for users (and developers)
- Some patches against latest libufo are required for boson. Without them boson
  cannot make actual use of libufo. It is a hell of work to developers (and
  eventually users) to track all required patches (or install modified libufo
  versions).
  E.g. as of today version 0.7.3 is the most current official libufo version,
  but that does not support multiline labels (not even cvs does as of today).
  Multiline labels are an absolutely required feature.
- Because of the lack of binary compatibility it only makes sense to link
  statically against libufo. However that requires yet another custom
  configure switch - it's a pain to the developers to make the users actually
  understand and do that, but it's even worse to the users who have to remember
  and follow 10 million different ways of compiling a hundred different libs,
  only to install boson.

