// This file was generated from *.boglc files
// Do not edit this file (all changes will be lost)!

#ifndef QT_CLEAN_NAMESPACE
#define QT_CLEAN_NAMESPACE
#endif

#include <bogl.h>
#include <boglx.h>

extern "C" {
	// from bogl_1_1_decl_p.boglc
	_glGetError bo_glGetError;
	_glBegin bo_glBegin;
	_glEnd bo_glEnd;
	_glEdgeFlag bo_glEdgeFlag;
	_glEdgeFlagv bo_glEdgeFlagv;
	_glVertex2d bo_glVertex2d;
	_glVertex2f bo_glVertex2f;
	_glVertex2i bo_glVertex2i;
	_glVertex2s bo_glVertex2s;
	_glVertex3d bo_glVertex3d;
	_glVertex3f bo_glVertex3f;
	_glVertex3i bo_glVertex3i;
	_glVertex3s bo_glVertex3s;
	_glVertex4d bo_glVertex4d;
	_glVertex4f bo_glVertex4f;
	_glVertex4i bo_glVertex4i;
	_glVertex4s bo_glVertex4s;
	_glVertex2dv bo_glVertex2dv;
	_glVertex2fv bo_glVertex2fv;
	_glVertex2iv bo_glVertex2iv;
	_glVertex2sv bo_glVertex2sv;
	_glVertex3dv bo_glVertex3dv;
	_glVertex3fv bo_glVertex3fv;
	_glVertex3iv bo_glVertex3iv;
	_glVertex3sv bo_glVertex3sv;
	_glVertex4dv bo_glVertex4dv;
	_glVertex4fv bo_glVertex4fv;
	_glVertex4iv bo_glVertex4iv;
	_glVertex4sv bo_glVertex4sv;
	_glTexCoord1d bo_glTexCoord1d;
	_glTexCoord1f bo_glTexCoord1f;
	_glTexCoord1i bo_glTexCoord1i;
	_glTexCoord1s bo_glTexCoord1s;
	_glTexCoord2d bo_glTexCoord2d;
	_glTexCoord2f bo_glTexCoord2f;
	_glTexCoord2i bo_glTexCoord2i;
	_glTexCoord2s bo_glTexCoord2s;
	_glTexCoord3d bo_glTexCoord3d;
	_glTexCoord3f bo_glTexCoord3f;
	_glTexCoord3i bo_glTexCoord3i;
	_glTexCoord3s bo_glTexCoord3s;
	_glTexCoord4d bo_glTexCoord4d;
	_glTexCoord4f bo_glTexCoord4f;
	_glTexCoord4i bo_glTexCoord4i;
	_glTexCoord4s bo_glTexCoord4s;
	_glTexCoord1dv bo_glTexCoord1dv;
	_glTexCoord1fv bo_glTexCoord1fv;
	_glTexCoord1iv bo_glTexCoord1iv;
	_glTexCoord1sv bo_glTexCoord1sv;
	_glTexCoord2dv bo_glTexCoord2dv;
	_glTexCoord2fv bo_glTexCoord2fv;
	_glTexCoord2iv bo_glTexCoord2iv;
	_glTexCoord2sv bo_glTexCoord2sv;
	_glTexCoord3dv bo_glTexCoord3dv;
	_glTexCoord3fv bo_glTexCoord3fv;
	_glTexCoord3iv bo_glTexCoord3iv;
	_glTexCoord3sv bo_glTexCoord3sv;
	_glTexCoord4dv bo_glTexCoord4dv;
	_glTexCoord4fv bo_glTexCoord4fv;
	_glTexCoord4iv bo_glTexCoord4iv;
	_glTexCoord4sv bo_glTexCoord4sv;
	_glNormal3b bo_glNormal3b;
	_glNormal3d bo_glNormal3d;
	_glNormal3f bo_glNormal3f;
	_glNormal3i bo_glNormal3i;
	_glNormal3s bo_glNormal3s;
	_glNormal3bv bo_glNormal3bv;
	_glNormal3dv bo_glNormal3dv;
	_glNormal3fv bo_glNormal3fv;
	_glNormal3iv bo_glNormal3iv;
	_glNormal3sv bo_glNormal3sv;
	_glColor3b bo_glColor3b;
	_glColor3d bo_glColor3d;
	_glColor3f bo_glColor3f;
	_glColor3i bo_glColor3i;
	_glColor3s bo_glColor3s;
	_glColor3ub bo_glColor3ub;
	_glColor3ui bo_glColor3ui;
	_glColor3us bo_glColor3us;
	_glColor4b bo_glColor4b;
	_glColor4d bo_glColor4d;
	_glColor4f bo_glColor4f;
	_glColor4i bo_glColor4i;
	_glColor4s bo_glColor4s;
	_glColor4ub bo_glColor4ub;
	_glColor4ui bo_glColor4ui;
	_glColor4us bo_glColor4us;
	_glColor3bv bo_glColor3bv;
	_glColor3dv bo_glColor3dv;
	_glColor3fv bo_glColor3fv;
	_glColor3iv bo_glColor3iv;
	_glColor3sv bo_glColor3sv;
	_glColor3ubv bo_glColor3ubv;
	_glColor3uiv bo_glColor3uiv;
	_glColor3usv bo_glColor3usv;
	_glColor4bv bo_glColor4bv;
	_glColor4dv bo_glColor4dv;
	_glColor4fv bo_glColor4fv;
	_glColor4iv bo_glColor4iv;
	_glColor4sv bo_glColor4sv;
	_glColor4ubv bo_glColor4ubv;
	_glColor4uiv bo_glColor4uiv;
	_glColor4usv bo_glColor4usv;
	_glIndexd bo_glIndexd;
	_glIndexf bo_glIndexf;
	_glIndexi bo_glIndexi;
	_glIndexs bo_glIndexs;
	_glIndexub bo_glIndexub;
	_glIndexdv bo_glIndexdv;
	_glIndexfv bo_glIndexfv;
	_glIndexiv bo_glIndexiv;
	_glIndexsv bo_glIndexsv;
	_glIndexubv bo_glIndexubv;
	_glRectd bo_glRectd;
	_glRectf bo_glRectf;
	_glRecti bo_glRecti;
	_glRects bo_glRects;
	_glRectdv bo_glRectdv;
	_glRectfv bo_glRectfv;
	_glRectiv bo_glRectiv;
	_glRectsv bo_glRectsv;
	_glDepthRange bo_glDepthRange;
	_glViewport bo_glViewport;
	_glMatrixMode bo_glMatrixMode;
	_glLoadMatrixd bo_glLoadMatrixd;
	_glLoadMatrixf bo_glLoadMatrixf;
	_glMultMatrixd bo_glMultMatrixd;
	_glMultMatrixf bo_glMultMatrixf;
	_glLoadIdentity bo_glLoadIdentity;
	_glRotated bo_glRotated;
	_glRotatef bo_glRotatef;
	_glTranslated bo_glTranslated;
	_glTranslatef bo_glTranslatef;
	_glScaled bo_glScaled;
	_glScalef bo_glScalef;
	_glFrustum bo_glFrustum;
	_glOrtho bo_glOrtho;
	_glPushMatrix bo_glPushMatrix;
	_glPopMatrix bo_glPopMatrix;
	_glEnable bo_glEnable;
	_glDisable bo_glDisable;
	_glTexGend bo_glTexGend;
	_glTexGenf bo_glTexGenf;
	_glTexGeni bo_glTexGeni;
	_glTexGendv bo_glTexGendv;
	_glTexGenfv bo_glTexGenfv;
	_glTexGeniv bo_glTexGeniv;
	_glClipPlane bo_glClipPlane;
	_glRasterPos2d bo_glRasterPos2d;
	_glRasterPos2f bo_glRasterPos2f;
	_glRasterPos2i bo_glRasterPos2i;
	_glRasterPos2s bo_glRasterPos2s;
	_glRasterPos3d bo_glRasterPos3d;
	_glRasterPos3f bo_glRasterPos3f;
	_glRasterPos3i bo_glRasterPos3i;
	_glRasterPos3s bo_glRasterPos3s;
	_glRasterPos4d bo_glRasterPos4d;
	_glRasterPos4f bo_glRasterPos4f;
	_glRasterPos4i bo_glRasterPos4i;
	_glRasterPos4s bo_glRasterPos4s;
	_glRasterPos2dv bo_glRasterPos2dv;
	_glRasterPos2fv bo_glRasterPos2fv;
	_glRasterPos2iv bo_glRasterPos2iv;
	_glRasterPos2sv bo_glRasterPos2sv;
	_glRasterPos3dv bo_glRasterPos3dv;
	_glRasterPos3fv bo_glRasterPos3fv;
	_glRasterPos3iv bo_glRasterPos3iv;
	_glRasterPos3sv bo_glRasterPos3sv;
	_glRasterPos4dv bo_glRasterPos4dv;
	_glRasterPos4fv bo_glRasterPos4fv;
	_glRasterPos4iv bo_glRasterPos4iv;
	_glRasterPos4sv bo_glRasterPos4sv;
	_glMaterialf bo_glMaterialf;
	_glMateriali bo_glMateriali;
	_glMaterialfv bo_glMaterialfv;
	_glMaterialiv bo_glMaterialiv;
	_glFrontFace bo_glFrontFace;
	_glLightf bo_glLightf;
	_glLighti bo_glLighti;
	_glLightfv bo_glLightfv;
	_glLightiv bo_glLightiv;
	_glLightModelf bo_glLightModelf;
	_glLightModeli bo_glLightModeli;
	_glLightModelfv bo_glLightModelfv;
	_glLightModeliv bo_glLightModeliv;
	_glColorMaterial bo_glColorMaterial;
	_glShadeModel bo_glShadeModel;
	_glPointSize bo_glPointSize;
	_glLineWidth bo_glLineWidth;
	_glLineStipple bo_glLineStipple;
	_glCullFace bo_glCullFace;
	_glPolygonStipple bo_glPolygonStipple;
	_glPolygonMode bo_glPolygonMode;
	_glPolygonOffset bo_glPolygonOffset;
	_glPixelStoref bo_glPixelStoref;
	_glPixelStorei bo_glPixelStorei;
	_glPixelTransferf bo_glPixelTransferf;
	_glPixelTransferi bo_glPixelTransferi;
	_glPixelMapfv bo_glPixelMapfv;
	_glPixelMapuiv bo_glPixelMapuiv;
	_glPixelMapusv bo_glPixelMapusv;
	_glDrawPixels bo_glDrawPixels;
	_glPixelZoom bo_glPixelZoom;
	_glBitmap bo_glBitmap;
	_glTexImage1D bo_glTexImage1D;
	_glTexImage2D bo_glTexImage2D;
	_glCopyTexImage1D bo_glCopyTexImage1D;
	_glCopyTexImage2D bo_glCopyTexImage2D;
	_glTexSubImage1D bo_glTexSubImage1D;
	_glTexSubImage2D bo_glTexSubImage2D;
	_glCopyTexSubImage1D bo_glCopyTexSubImage1D;
	_glCopyTexSubImage2D bo_glCopyTexSubImage2D;
	_glTexParameterf bo_glTexParameterf;
	_glTexParameteri bo_glTexParameteri;
	_glTexParameterfv bo_glTexParameterfv;
	_glTexParameteriv bo_glTexParameteriv;
	_glBindTexture bo_glBindTexture;
	_glDeleteTextures bo_glDeleteTextures;
	_glGenTextures bo_glGenTextures;
	_glAreTexturesResident bo_glAreTexturesResident;
	_glPrioritizeTextures bo_glPrioritizeTextures;
	_glTexEnvf bo_glTexEnvf;
	_glTexEnvi bo_glTexEnvi;
	_glTexEnvfv bo_glTexEnvfv;
	_glTexEnviv bo_glTexEnviv;
	_glFogf bo_glFogf;
	_glFogi bo_glFogi;
	_glFogfv bo_glFogfv;
	_glFogiv bo_glFogiv;
	_glScissor bo_glScissor;
	_glAlphaFunc bo_glAlphaFunc;
	_glStencilFunc bo_glStencilFunc;
	_glStencilOp bo_glStencilOp;
	_glDepthFunc bo_glDepthFunc;
	_glBlendFunc bo_glBlendFunc;
	_glLogicOp bo_glLogicOp;
	_glDrawBuffer bo_glDrawBuffer;
	_glIndexMask bo_glIndexMask;
	_glDepthMask bo_glDepthMask;
	_glColorMask bo_glColorMask;
	_glStencilMask bo_glStencilMask;
	_glClear bo_glClear;
	_glClearColor bo_glClearColor;
	_glClearIndex bo_glClearIndex;
	_glClearDepth bo_glClearDepth;
	_glClearStencil bo_glClearStencil;
	_glClearAccum bo_glClearAccum;
	_glAccum bo_glAccum;
	_glReadPixels bo_glReadPixels;
	_glReadBuffer bo_glReadBuffer;
	_glCopyPixels bo_glCopyPixels;
	_glMap2d bo_glMap2d;
	_glMap2f bo_glMap2f;
	_glMap1d bo_glMap1d;
	_glMap1f bo_glMap1f;
	_glEvalCoord1d bo_glEvalCoord1d;
	_glEvalCoord1f bo_glEvalCoord1f;
	_glEvalCoord1dv bo_glEvalCoord1dv;
	_glEvalCoord1fv bo_glEvalCoord1fv;
	_glEvalCoord2d bo_glEvalCoord2d;
	_glEvalCoord2f bo_glEvalCoord2f;
	_glEvalCoord2dv bo_glEvalCoord2dv;
	_glEvalCoord2fv bo_glEvalCoord2fv;
	_glMapGrid1d bo_glMapGrid1d;
	_glMapGrid1f bo_glMapGrid1f;
	_glMapGrid2d bo_glMapGrid2d;
	_glMapGrid2f bo_glMapGrid2f;
	_glEvalMesh1 bo_glEvalMesh1;
	_glEvalMesh2 bo_glEvalMesh2;
	_glEvalPoint1 bo_glEvalPoint1;
	_glEvalPoint2 bo_glEvalPoint2;
	_glInitNames bo_glInitNames;
	_glLoadName bo_glLoadName;
	_glPushName bo_glPushName;
	_glPopName bo_glPopName;
	_glRenderMode bo_glRenderMode;
	_glSelectBuffer bo_glSelectBuffer;
	_glFeedbackBuffer bo_glFeedbackBuffer;
	_glPassThrough bo_glPassThrough;
	_glNewList bo_glNewList;
	_glEndList bo_glEndList;
	_glCallList bo_glCallList;
	_glCallLists bo_glCallLists;
	_glListBase bo_glListBase;
	_glGenLists bo_glGenLists;
	_glIsList bo_glIsList;
	_glDeleteLists bo_glDeleteLists;
	_glFlush bo_glFlush;
	_glFinish bo_glFinish;
	_glHint bo_glHint;
	_glGetBooleanv bo_glGetBooleanv;
	_glGetIntegerv bo_glGetIntegerv;
	_glGetDoublev bo_glGetDoublev;
	_glGetFloatv bo_glGetFloatv;
	_glIsEnabled bo_glIsEnabled;
	_glGetClipPlane bo_glGetClipPlane;
	_glGetLightfv bo_glGetLightfv;
	_glGetLightiv bo_glGetLightiv;
	_glGetMaterialfv bo_glGetMaterialfv;
	_glGetMaterialiv bo_glGetMaterialiv;
	_glGetTexEnvfv bo_glGetTexEnvfv;
	_glGetTexEnviv bo_glGetTexEnviv;
	_glGetTexGendv bo_glGetTexGendv;
	_glGetTexGenfv bo_glGetTexGenfv;
	_glGetTexGeniv bo_glGetTexGeniv;
	_glGetTexParameterfv bo_glGetTexParameterfv;
	_glGetTexParameteriv bo_glGetTexParameteriv;
	_glGetTexLevelParameterfv bo_glGetTexLevelParameterfv;
	_glGetTexLevelParameteriv bo_glGetTexLevelParameteriv;
	_glGetPixelMapfv bo_glGetPixelMapfv;
	_glGetPixelMapuiv bo_glGetPixelMapuiv;
	_glGetPixelMapusv bo_glGetPixelMapusv;
	_glGetMapdv bo_glGetMapdv;
	_glGetMapfv bo_glGetMapfv;
	_glGetMapiv bo_glGetMapiv;
	_glGetTexImage bo_glGetTexImage;
	_glIsTexture bo_glIsTexture;
	_glGetPolygonStipple bo_glGetPolygonStipple;
	_glGetPointerv bo_glGetPointerv;
	_glGetString bo_glGetString;
	_glPushAttrib bo_glPushAttrib;
	_glPopAttrib bo_glPopAttrib;
	_glPushClientAttrib bo_glPushClientAttrib;
	_glPopClientAttrib bo_glPopClientAttrib;
	_glEdgeFlagPointer bo_glEdgeFlagPointer;
	_glTexCoordPointer bo_glTexCoordPointer;
	_glColorPointer bo_glColorPointer;
	_glIndexPointer bo_glIndexPointer;
	_glNormalPointer bo_glNormalPointer;
	_glVertexPointer bo_glVertexPointer;
	_glEnableClientState bo_glEnableClientState;
	_glDisableClientState bo_glDisableClientState;
	_glArrayElement bo_glArrayElement;
	_glDrawArrays bo_glDrawArrays;
	_glDrawElements bo_glDrawElements;
	_glInterleavedArrays bo_glInterleavedArrays;

	// from bogl_1_2_decl_p.boglc
	_glTexImage3D bo_glTexImage3D;
	_glTexSubImage3D bo_glTexSubImage3D;
	_glCopyTexSubImage3D bo_glCopyTexSubImage3D;
	_glDrawRangeElements bo_glDrawRangeElements;
	_glColorTable bo_glColorTable;
	_glCopyColorTable bo_glCopyColorTable;
	_glColorTableParameteriv bo_glColorTableParameteriv;
	_glColorTableParameterfv bo_glColorTableParameterfv;
	_glGetColorTable bo_glGetColorTable;
	_glGetColorTableParameterfv bo_glGetColorTableParameterfv;
	_glGetColorTableParameteriv bo_glGetColorTableParameteriv;
	_glColorSubTable bo_glColorSubTable;
	_glCopyColorSubTable bo_glCopyColorSubTable;
	_glConvolutionFilter1D bo_glConvolutionFilter1D;
	_glConvolutionFilter2D bo_glConvolutionFilter2D;
	_glCopyConvolutionFilter1D bo_glCopyConvolutionFilter1D;
	_glCopyConvolutionFilter2D bo_glCopyConvolutionFilter2D;
	_glGetConvolutionFilter bo_glGetConvolutionFilter;
	_glSeparableFilter2D bo_glSeparableFilter2D;
	_glGetSeparableFilter bo_glGetSeparableFilter;
	_glConvolutionParameterf bo_glConvolutionParameterf;
	_glConvolutionParameterfv bo_glConvolutionParameterfv;
	_glConvolutionParameteri bo_glConvolutionParameteri;
	_glConvolutionParameteriv bo_glConvolutionParameteriv;
	_glGetConvolutionParameterfv bo_glGetConvolutionParameterfv;
	_glGetConvolutionParameteriv bo_glGetConvolutionParameteriv;
	_glHistogram bo_glHistogram;
	_glResetHistogram bo_glResetHistogram;
	_glGetHistogram bo_glGetHistogram;
	_glGetHistogramParameterfv bo_glGetHistogramParameterfv;
	_glGetHistogramParameteriv bo_glGetHistogramParameteriv;
	_glMinmax bo_glMinmax;
	_glResetMinmax bo_glResetMinmax;
	_glGetMinmax bo_glGetMinmax;
	_glGetMinmaxParameterfv bo_glGetMinmaxParameterfv;
	_glGetMinmaxParameteriv bo_glGetMinmaxParameteriv;
	_glBlendColor bo_glBlendColor;
	_glBlendEquation bo_glBlendEquation;

	// from bogl_1_3_decl_p.boglc
	_glCompressedTexImage1D bo_glCompressedTexImage1D;
	_glCompressedTexImage2D bo_glCompressedTexImage2D;
	_glCompressedTexImage3D bo_glCompressedTexImage3D;
	_glCompressedTexSubImage1D bo_glCompressedTexSubImage1D;
	_glCompressedTexSubImage2D bo_glCompressedTexSubImage2D;
	_glCompressedTexSubImage3D bo_glCompressedTexSubImage3D;
	_glGetCompressedTexImage bo_glGetCompressedTexImage;
	_glSampleCoverage bo_glSampleCoverage;
	_glMultiTexCoord1d bo_glMultiTexCoord1d;
	_glMultiTexCoord1dv bo_glMultiTexCoord1dv;
	_glMultiTexCoord1f bo_glMultiTexCoord1f;
	_glMultiTexCoord1fv bo_glMultiTexCoord1fv;
	_glMultiTexCoord1i bo_glMultiTexCoord1i;
	_glMultiTexCoord1iv bo_glMultiTexCoord1iv;
	_glMultiTexCoord1s bo_glMultiTexCoord1s;
	_glMultiTexCoord1sv bo_glMultiTexCoord1sv;
	_glMultiTexCoord2d bo_glMultiTexCoord2d;
	_glMultiTexCoord2dv bo_glMultiTexCoord2dv;
	_glMultiTexCoord2f bo_glMultiTexCoord2f;
	_glMultiTexCoord2fv bo_glMultiTexCoord2fv;
	_glMultiTexCoord2i bo_glMultiTexCoord2i;
	_glMultiTexCoord2iv bo_glMultiTexCoord2iv;
	_glMultiTexCoord2s bo_glMultiTexCoord2s;
	_glMultiTexCoord2sv bo_glMultiTexCoord2sv;
	_glMultiTexCoord3d bo_glMultiTexCoord3d;
	_glMultiTexCoord3dv bo_glMultiTexCoord3dv;
	_glMultiTexCoord3f bo_glMultiTexCoord3f;
	_glMultiTexCoord3fv bo_glMultiTexCoord3fv;
	_glMultiTexCoord3i bo_glMultiTexCoord3i;
	_glMultiTexCoord3iv bo_glMultiTexCoord3iv;
	_glMultiTexCoord3s bo_glMultiTexCoord3s;
	_glMultiTexCoord3sv bo_glMultiTexCoord3sv;
	_glMultiTexCoord4d bo_glMultiTexCoord4d;
	_glMultiTexCoord4dv bo_glMultiTexCoord4dv;
	_glMultiTexCoord4f bo_glMultiTexCoord4f;
	_glMultiTexCoord4fv bo_glMultiTexCoord4fv;
	_glMultiTexCoord4i bo_glMultiTexCoord4i;
	_glMultiTexCoord4iv bo_glMultiTexCoord4iv;
	_glMultiTexCoord4s bo_glMultiTexCoord4s;
	_glMultiTexCoord4sv bo_glMultiTexCoord4sv;
	_glClientActiveTexture bo_glClientActiveTexture;
	_glActiveTexture bo_glActiveTexture;
	_glLoadTransposeMatrixd bo_glLoadTransposeMatrixd;
	_glLoadTransposeMatrixf bo_glLoadTransposeMatrixf;
	_glMultTransposeMatrixd bo_glMultTransposeMatrixd;
	_glMultTransposeMatrixf bo_glMultTransposeMatrixf;

	// from bogl_1_4_decl_p.boglc
	_glFogCoordf bo_glFogCoordf;
	_glFogCoordd bo_glFogCoordd;
	_glFogCoordfv bo_glFogCoordfv;
	_glFogCoorddv bo_glFogCoorddv;
	_glFogCoordPointer bo_glFogCoordPointer;
	_glMultiDrawArrays bo_glMultiDrawArrays;
	_glMultiDrawElements bo_glMultiDrawElements;
	_glPointParameterf bo_glPointParameterf;
	_glPointParameterfv bo_glPointParameterfv;
	_glPointParameteri bo_glPointParameteri;
	_glPointParameteriv bo_glPointParameteriv;
	_glSecondaryColor3b bo_glSecondaryColor3b;
	_glSecondaryColor3s bo_glSecondaryColor3s;
	_glSecondaryColor3i bo_glSecondaryColor3i;
	_glSecondaryColor3f bo_glSecondaryColor3f;
	_glSecondaryColor3d bo_glSecondaryColor3d;
	_glSecondaryColor3bv bo_glSecondaryColor3bv;
	_glSecondaryColor3sv bo_glSecondaryColor3sv;
	_glSecondaryColor3iv bo_glSecondaryColor3iv;
	_glSecondaryColor3fv bo_glSecondaryColor3fv;
	_glSecondaryColor3dv bo_glSecondaryColor3dv;
	_glSecondaryColor3ub bo_glSecondaryColor3ub;
	_glSecondaryColor3us bo_glSecondaryColor3us;
	_glSecondaryColor3ui bo_glSecondaryColor3ui;
	_glSecondaryColor3ubv bo_glSecondaryColor3ubv;
	_glSecondaryColor3usv bo_glSecondaryColor3usv;
	_glSecondaryColor3uiv bo_glSecondaryColor3uiv;
	_glSecondaryColorPointer bo_glSecondaryColorPointer;
	_glBlendFuncSeparate bo_glBlendFuncSeparate;
	_glWindowPos2d bo_glWindowPos2d;
	_glWindowPos2f bo_glWindowPos2f;
	_glWindowPos2i bo_glWindowPos2i;
	_glWindowPos2s bo_glWindowPos2s;
	_glWindowPos2dv bo_glWindowPos2dv;
	_glWindowPos2fv bo_glWindowPos2fv;
	_glWindowPos2iv bo_glWindowPos2iv;
	_glWindowPos2sv bo_glWindowPos2sv;
	_glWindowPos3d bo_glWindowPos3d;
	_glWindowPos3f bo_glWindowPos3f;
	_glWindowPos3i bo_glWindowPos3i;
	_glWindowPos3s bo_glWindowPos3s;
	_glWindowPos3dv bo_glWindowPos3dv;
	_glWindowPos3fv bo_glWindowPos3fv;
	_glWindowPos3iv bo_glWindowPos3iv;
	_glWindowPos3sv bo_glWindowPos3sv;

	// from bogl_1_5_decl_p.boglc
	_glBindBuffer bo_glBindBuffer;
	_glDeleteBuffers bo_glDeleteBuffers;
	_glGenBuffers bo_glGenBuffers;
	_glIsBuffer bo_glIsBuffer;
	_glBufferData bo_glBufferData;
	_glBufferSubData bo_glBufferSubData;
	_glMapBuffer bo_glMapBuffer;
	_glUnmapBuffer bo_glUnmapBuffer;
	_glGetBufferParameteriv bo_glGetBufferParameteriv;
	_glGetBufferPointerv bo_glGetBufferPointerv;
	_glGenQueries bo_glGenQueries;
	_glDeleteQueries bo_glDeleteQueries;
	_glIsQuery bo_glIsQuery;
	_glBeginQuery bo_glBeginQuery;
	_glEndQuery bo_glEndQuery;
	_glGetQueryiv bo_glGetQueryiv;
	_glGetQueryObjectiv bo_glGetQueryObjectiv;
	_glGetQueryObjectuiv bo_glGetQueryObjectuiv;

	// from bogl_2_0_decl_p.boglc
	_glDrawBuffers bo_glDrawBuffers;
	_glStencilOpSeparate bo_glStencilOpSeparate;
	_glStencilFuncSeparate bo_glStencilFuncSeparate;
	_glIsShader bo_glIsShader;
	_glIsProgram bo_glIsProgram;
	_glGetAttachedShaders bo_glGetAttachedShaders;
	_glCreateShader bo_glCreateShader;
	_glShaderSource bo_glShaderSource;
	_glCompileShader bo_glCompileShader;
	_glDeleteShader bo_glDeleteShader;
	_glCreateProgram bo_glCreateProgram;
	_glAttachShader bo_glAttachShader;
	_glDetachShader bo_glDetachShader;
	_glLinkProgram bo_glLinkProgram;
	_glUseProgram bo_glUseProgram;
	_glDeleteProgram bo_glDeleteProgram;
	_glGetShaderInfoLog bo_glGetShaderInfoLog;
	_glGetProgramInfoLog bo_glGetProgramInfoLog;
	_glGetShaderSource bo_glGetShaderSource;
	_glGetUniformfv bo_glGetUniformfv;
	_glGetUniformiv bo_glGetUniformiv;
	_glGetProgramiv bo_glGetProgramiv;
	_glGetShaderiv bo_glGetShaderiv;
	_glUniform1f bo_glUniform1f;
	_glUniform2f bo_glUniform2f;
	_glUniform3f bo_glUniform3f;
	_glUniform4f bo_glUniform4f;
	_glUniform1i bo_glUniform1i;
	_glUniform2i bo_glUniform2i;
	_glUniform3i bo_glUniform3i;
	_glUniform4i bo_glUniform4i;
	_glUniform1fv bo_glUniform1fv;
	_glUniform2fv bo_glUniform2fv;
	_glUniform3fv bo_glUniform3fv;
	_glUniform4fv bo_glUniform4fv;
	_glUniform1iv bo_glUniform1iv;
	_glUniform2iv bo_glUniform2iv;
	_glUniform3iv bo_glUniform3iv;
	_glUniform4iv bo_glUniform4iv;
	_glUniformMatrix2fv bo_glUniformMatrix2fv;
	_glUniformMatrix3fv bo_glUniformMatrix3fv;
	_glUniformMatrix4fv bo_glUniformMatrix4fv;
	_glValidateProgram bo_glValidateProgram;
	_glGetUniformLocation bo_glGetUniformLocation;
	_glGetActiveUniform bo_glGetActiveUniform;
	_glVertexAttrib1s bo_glVertexAttrib1s;
	_glVertexAttrib1f bo_glVertexAttrib1f;
	_glVertexAttrib1d bo_glVertexAttrib1d;
	_glVertexAttrib2s bo_glVertexAttrib2s;
	_glVertexAttrib2f bo_glVertexAttrib2f;
	_glVertexAttrib2d bo_glVertexAttrib2d;
	_glVertexAttrib3s bo_glVertexAttrib3s;
	_glVertexAttrib3f bo_glVertexAttrib3f;
	_glVertexAttrib3d bo_glVertexAttrib3d;
	_glVertexAttrib4s bo_glVertexAttrib4s;
	_glVertexAttrib4f bo_glVertexAttrib4f;
	_glVertexAttrib4d bo_glVertexAttrib4d;
	_glVertexAttrib1sv bo_glVertexAttrib1sv;
	_glVertexAttrib1fv bo_glVertexAttrib1fv;
	_glVertexAttrib1dv bo_glVertexAttrib1dv;
	_glVertexAttrib2sv bo_glVertexAttrib2sv;
	_glVertexAttrib2fv bo_glVertexAttrib2fv;
	_glVertexAttrib2dv bo_glVertexAttrib2dv;
	_glVertexAttrib3sv bo_glVertexAttrib3sv;
	_glVertexAttrib3fv bo_glVertexAttrib3fv;
	_glVertexAttrib3dv bo_glVertexAttrib3dv;
	_glVertexAttrib4sv bo_glVertexAttrib4sv;
	_glVertexAttrib4fv bo_glVertexAttrib4fv;
	_glVertexAttrib4dv bo_glVertexAttrib4dv;
	_glVertexAttrib4bv bo_glVertexAttrib4bv;
	_glVertexAttrib4iv bo_glVertexAttrib4iv;
	_glVertexAttrib4ubv bo_glVertexAttrib4ubv;
	_glVertexAttrib4usv bo_glVertexAttrib4usv;
	_glVertexAttrib4uiv bo_glVertexAttrib4uiv;
	_glVertexAttrib4Nub bo_glVertexAttrib4Nub;
	_glVertexAttrib4Nbv bo_glVertexAttrib4Nbv;
	_glVertexAttrib4Nsv bo_glVertexAttrib4Nsv;
	_glVertexAttrib4Niv bo_glVertexAttrib4Niv;
	_glVertexAttrib4Nubv bo_glVertexAttrib4Nubv;
	_glVertexAttrib4Nusv bo_glVertexAttrib4Nusv;
	_glVertexAttrib4Nuiv bo_glVertexAttrib4Nuiv;
	_glVertexAttribPointer bo_glVertexAttribPointer;
	_glEnableVertexAttribArray bo_glEnableVertexAttribArray;
	_glDisableVertexAttribArray bo_glDisableVertexAttribArray;
	_glBindAttribLocation bo_glBindAttribLocation;
	_glGetActiveAttrib bo_glGetActiveAttrib;
	_glGetAttribLocation bo_glGetAttribLocation;
	_glGetVertexAttribdv bo_glGetVertexAttribdv;
	_glGetVertexAttribfv bo_glGetVertexAttribfv;
	_glGetVertexAttribiv bo_glGetVertexAttribiv;
	_glGetVertexAttribPointerv bo_glGetVertexAttribPointerv;
	_glBlendEquationSeparate bo_glBlendEquationSeparate;

	// from arb_multitexture_decl_p.boglc
	_glMultiTexCoord1dARB bo_glMultiTexCoord1dARB;
	_glMultiTexCoord1dvARB bo_glMultiTexCoord1dvARB;
	_glMultiTexCoord1fARB bo_glMultiTexCoord1fARB;
	_glMultiTexCoord1fvARB bo_glMultiTexCoord1fvARB;
	_glMultiTexCoord1iARB bo_glMultiTexCoord1iARB;
	_glMultiTexCoord1ivARB bo_glMultiTexCoord1ivARB;
	_glMultiTexCoord1sARB bo_glMultiTexCoord1sARB;
	_glMultiTexCoord1svARB bo_glMultiTexCoord1svARB;
	_glMultiTexCoord2dARB bo_glMultiTexCoord2dARB;
	_glMultiTexCoord2dvARB bo_glMultiTexCoord2dvARB;
	_glMultiTexCoord2fARB bo_glMultiTexCoord2fARB;
	_glMultiTexCoord2fvARB bo_glMultiTexCoord2fvARB;
	_glMultiTexCoord2iARB bo_glMultiTexCoord2iARB;
	_glMultiTexCoord2ivARB bo_glMultiTexCoord2ivARB;
	_glMultiTexCoord2sARB bo_glMultiTexCoord2sARB;
	_glMultiTexCoord2svARB bo_glMultiTexCoord2svARB;
	_glMultiTexCoord3dARB bo_glMultiTexCoord3dARB;
	_glMultiTexCoord3dvARB bo_glMultiTexCoord3dvARB;
	_glMultiTexCoord3fARB bo_glMultiTexCoord3fARB;
	_glMultiTexCoord3fvARB bo_glMultiTexCoord3fvARB;
	_glMultiTexCoord3iARB bo_glMultiTexCoord3iARB;
	_glMultiTexCoord3ivARB bo_glMultiTexCoord3ivARB;
	_glMultiTexCoord3sARB bo_glMultiTexCoord3sARB;
	_glMultiTexCoord3svARB bo_glMultiTexCoord3svARB;
	_glMultiTexCoord4dARB bo_glMultiTexCoord4dARB;
	_glMultiTexCoord4dvARB bo_glMultiTexCoord4dvARB;
	_glMultiTexCoord4fARB bo_glMultiTexCoord4fARB;
	_glMultiTexCoord4fvARB bo_glMultiTexCoord4fvARB;
	_glMultiTexCoord4iARB bo_glMultiTexCoord4iARB;
	_glMultiTexCoord4ivARB bo_glMultiTexCoord4ivARB;
	_glMultiTexCoord4sARB bo_glMultiTexCoord4sARB;
	_glMultiTexCoord4svARB bo_glMultiTexCoord4svARB;
	_glClientActiveTextureARB bo_glClientActiveTextureARB;
	_glActiveTextureARB bo_glActiveTextureARB;

	// from arb_shader_objects_decl_p.boglc
	_glDeleteObjectARB bo_glDeleteObjectARB;
	_glGetHandleARB bo_glGetHandleARB;
	_glDetachObjectARB bo_glDetachObjectARB;
	_glCreateShaderObjectARB bo_glCreateShaderObjectARB;
	_glShaderSourceARB bo_glShaderSourceARB;
	_glCompileShaderARB bo_glCompileShaderARB;
	_glCreateProgramObjectARB bo_glCreateProgramObjectARB;
	_glAttachObjectARB bo_glAttachObjectARB;
	_glLinkProgramARB bo_glLinkProgramARB;
	_glUseProgramObjectARB bo_glUseProgramObjectARB;
	_glValidateProgramARB bo_glValidateProgramARB;
	_glUniform1fARB bo_glUniform1fARB;
	_glUniform2fARB bo_glUniform2fARB;
	_glUniform3fARB bo_glUniform3fARB;
	_glUniform4fARB bo_glUniform4fARB;
	_glUniform1iARB bo_glUniform1iARB;
	_glUniform2iARB bo_glUniform2iARB;
	_glUniform3iARB bo_glUniform3iARB;
	_glUniform4iARB bo_glUniform4iARB;
	_glUniform1fvARB bo_glUniform1fvARB;
	_glUniform2fvARB bo_glUniform2fvARB;
	_glUniform3fvARB bo_glUniform3fvARB;
	_glUniform4fvARB bo_glUniform4fvARB;
	_glUniform1ivARB bo_glUniform1ivARB;
	_glUniform2ivARB bo_glUniform2ivARB;
	_glUniform3ivARB bo_glUniform3ivARB;
	_glUniform4ivARB bo_glUniform4ivARB;
	_glUniformMatrix2fvARB bo_glUniformMatrix2fvARB;
	_glUniformMatrix3fvARB bo_glUniformMatrix3fvARB;
	_glUniformMatrix4fvARB bo_glUniformMatrix4fvARB;
	_glGetObjectParameterfvARB bo_glGetObjectParameterfvARB;
	_glGetObjectParameterivARB bo_glGetObjectParameterivARB;
	_glGetInfoLogARB bo_glGetInfoLogARB;
	_glGetAttachedObjectsARB bo_glGetAttachedObjectsARB;
	_glGetUniformLocationARB bo_glGetUniformLocationARB;
	_glGetActiveUniformARB bo_glGetActiveUniformARB;
	_glGetUniformfvARB bo_glGetUniformfvARB;
	_glGetUniformivARB bo_glGetUniformivARB;
	_glGetShaderSourceARB bo_glGetShaderSourceARB;

	// from arb_vertex_buffer_object_decl_p.boglc
	_glBindBufferARB bo_glBindBufferARB;
	_glDeleteBuffersARB bo_glDeleteBuffersARB;
	_glGenBuffersARB bo_glGenBuffersARB;
	_glIsBufferARB bo_glIsBufferARB;
	_glBufferDataARB bo_glBufferDataARB;
	_glBufferSubDataARB bo_glBufferSubDataARB;
	_glMapBufferARB bo_glMapBufferARB;
	_glUnmapBufferARB bo_glUnmapBufferARB;
	_glGetBufferParameterivARB bo_glGetBufferParameterivARB;
	_glGetBufferPointervARB bo_glGetBufferPointervARB;

	// from ext_blend_color_decl_p.boglc
	_glBlendColorEXT bo_glBlendColorEXT;

	// from ext_framebuffer_object_decl_p.boglc
	_glIsRenderbufferEXT bo_glIsRenderbufferEXT;
	_glBindRenderbufferEXT bo_glBindRenderbufferEXT;
	_glDeleteRenderbuffersEXT bo_glDeleteRenderbuffersEXT;
	_glGenRenderbuffersEXT bo_glGenRenderbuffersEXT;
	_glRenderbufferStorageEXT bo_glRenderbufferStorageEXT;
	_glGetRenderbufferParameterivEXT bo_glGetRenderbufferParameterivEXT;
	_glIsFramebufferEXT bo_glIsFramebufferEXT;
	_glBindFramebufferEXT bo_glBindFramebufferEXT;
	_glDeleteFramebuffersEXT bo_glDeleteFramebuffersEXT;
	_glGenFramebuffersEXT bo_glGenFramebuffersEXT;
	_glCheckFramebufferStatusEXT bo_glCheckFramebufferStatusEXT;
	_glFramebufferTexture1DEXT bo_glFramebufferTexture1DEXT;
	_glFramebufferTexture2DEXT bo_glFramebufferTexture2DEXT;
	_glFramebufferTexture3DEXT bo_glFramebufferTexture3DEXT;
	_glFramebufferRenderbufferEXT bo_glFramebufferRenderbufferEXT;
	_glGetFramebufferAttachmentParameterivEXT bo_glGetFramebufferAttachmentParameterivEXT;
	_glGenerateMipmapEXT bo_glGenerateMipmapEXT;

	// from ext_polygon_offset_decl_p.boglc
	_glPolygonOffsetEXT bo_glPolygonOffsetEXT;

	// from ext_texture3d_decl_p.boglc
	_glTexImage3DEXT bo_glTexImage3DEXT;
	_glTexSubImage3DEXT bo_glTexSubImage3DEXT;
	_glCopyTexSubImage3DEXT bo_glCopyTexSubImage3DEXT;

	// from boglx_decl_p.boglc
	_glXChooseVisual bo_glXChooseVisual;
	_glXCopyContext bo_glXCopyContext;
	_glXCreateContext bo_glXCreateContext;
	_glXCreateGLXPixmap bo_glXCreateGLXPixmap;
	_glXDestroyContext bo_glXDestroyContext;
	_glXDestroyGLXPixmap bo_glXDestroyGLXPixmap;
	_glXGetConfig bo_glXGetConfig;
	_glXGetCurrentContext bo_glXGetCurrentContext;
	_glXGetCurrentDrawable bo_glXGetCurrentDrawable;
	_glXIsDirect bo_glXIsDirect;
	_glXMakeCurrent bo_glXMakeCurrent;
	_glXQueryExtension bo_glXQueryExtension;
	_glXQueryVersion bo_glXQueryVersion;
	_glXSwapBuffers bo_glXSwapBuffers;
	_glXUseXFont bo_glXUseXFont;
	_glXWaitGL bo_glXWaitGL;
	_glXWaitX bo_glXWaitX;
	_glXGetClientString bo_glXGetClientString;
	_glXQueryServerString bo_glXQueryServerString;
	_glXQueryExtensionsString bo_glXQueryExtensionsString;
	_glXGetFBConfigs bo_glXGetFBConfigs;
	_glXChooseFBConfig bo_glXChooseFBConfig;
	_glXGetFBConfigAttrib bo_glXGetFBConfigAttrib;
	_glXGetVisualFromFBConfig bo_glXGetVisualFromFBConfig;
	_glXCreateWindow bo_glXCreateWindow;
	_glXDestroyWindow bo_glXDestroyWindow;
	_glXCreatePixmap bo_glXCreatePixmap;
	_glXDestroyPixmap bo_glXDestroyPixmap;
	_glXCreatePbuffer bo_glXCreatePbuffer;
	_glXDestroyPbuffer bo_glXDestroyPbuffer;
	_glXQueryDrawable bo_glXQueryDrawable;
	_glXCreateNewContext bo_glXCreateNewContext;
	_glXMakeContextCurrent bo_glXMakeContextCurrent;
	_glXGetCurrentReadDrawable bo_glXGetCurrentReadDrawable;
	_glXGetCurrentDisplay bo_glXGetCurrentDisplay;
	_glXQueryContext bo_glXQueryContext;
	_glXSelectEvent bo_glXSelectEvent;
	_glXGetSelectedEvent bo_glXGetSelectedEvent;
	_glXGetProcAddress bo_glXGetProcAddress;
	_glXGetContextIDEXT bo_glXGetContextIDEXT;
	_glXImportContextEXT bo_glXImportContextEXT;
	_glXFreeContextEXT bo_glXFreeContextEXT;
	_glXQueryContextInfoEXT bo_glXQueryContextInfoEXT;
	_glXGetCurrentDisplayEXT bo_glXGetCurrentDisplayEXT;
	_glXGetProcAddressARB bo_glXGetProcAddressARB;
	_glXAllocateMemoryNV bo_glXAllocateMemoryNV;
	_glXFreeMemoryNV bo_glXFreeMemoryNV;
	_glXGetAGPOffsetMESA bo_glXGetAGPOffsetMESA;
	_glXGetFBConfigAttribSGIX bo_glXGetFBConfigAttribSGIX;
	_glXChooseFBConfigSGIX bo_glXChooseFBConfigSGIX;
	_glXCreateGLXPixmapWithConfigSGIX bo_glXCreateGLXPixmapWithConfigSGIX;
	_glXCreateContextWithConfigSGIX bo_glXCreateContextWithConfigSGIX;
	_glXGetVisualFromFBConfigSGIX bo_glXGetVisualFromFBConfigSGIX;
	_glXGetFBConfigFromVisualSGIX bo_glXGetFBConfigFromVisualSGIX;
	_glXCreateGLXPbufferSGIX bo_glXCreateGLXPbufferSGIX;
	_glXDestroyGLXPbufferSGIX bo_glXDestroyGLXPbufferSGIX;
	_glXQueryGLXPbufferSGIX bo_glXQueryGLXPbufferSGIX;
	_glXSelectEventSGIX bo_glXSelectEventSGIX;
	_glXGetSelectedEventSGIX bo_glXGetSelectedEventSGIX;
}

bool bogl_resolveSymbols_GL()
{
	// from bogl_1_1_decl_p.boglc
	bo_glGetError = (_glGetError)glXGetProcAddressARB((const GLubyte*)"glGetError");
	bo_glBegin = (_glBegin)glXGetProcAddressARB((const GLubyte*)"glBegin");
	bo_glEnd = (_glEnd)glXGetProcAddressARB((const GLubyte*)"glEnd");
	bo_glEdgeFlag = (_glEdgeFlag)glXGetProcAddressARB((const GLubyte*)"glEdgeFlag");
	bo_glEdgeFlagv = (_glEdgeFlagv)glXGetProcAddressARB((const GLubyte*)"glEdgeFlagv");
	bo_glVertex2d = (_glVertex2d)glXGetProcAddressARB((const GLubyte*)"glVertex2d");
	bo_glVertex2f = (_glVertex2f)glXGetProcAddressARB((const GLubyte*)"glVertex2f");
	bo_glVertex2i = (_glVertex2i)glXGetProcAddressARB((const GLubyte*)"glVertex2i");
	bo_glVertex2s = (_glVertex2s)glXGetProcAddressARB((const GLubyte*)"glVertex2s");
	bo_glVertex3d = (_glVertex3d)glXGetProcAddressARB((const GLubyte*)"glVertex3d");
	bo_glVertex3f = (_glVertex3f)glXGetProcAddressARB((const GLubyte*)"glVertex3f");
	bo_glVertex3i = (_glVertex3i)glXGetProcAddressARB((const GLubyte*)"glVertex3i");
	bo_glVertex3s = (_glVertex3s)glXGetProcAddressARB((const GLubyte*)"glVertex3s");
	bo_glVertex4d = (_glVertex4d)glXGetProcAddressARB((const GLubyte*)"glVertex4d");
	bo_glVertex4f = (_glVertex4f)glXGetProcAddressARB((const GLubyte*)"glVertex4f");
	bo_glVertex4i = (_glVertex4i)glXGetProcAddressARB((const GLubyte*)"glVertex4i");
	bo_glVertex4s = (_glVertex4s)glXGetProcAddressARB((const GLubyte*)"glVertex4s");
	bo_glVertex2dv = (_glVertex2dv)glXGetProcAddressARB((const GLubyte*)"glVertex2dv");
	bo_glVertex2fv = (_glVertex2fv)glXGetProcAddressARB((const GLubyte*)"glVertex2fv");
	bo_glVertex2iv = (_glVertex2iv)glXGetProcAddressARB((const GLubyte*)"glVertex2iv");
	bo_glVertex2sv = (_glVertex2sv)glXGetProcAddressARB((const GLubyte*)"glVertex2sv");
	bo_glVertex3dv = (_glVertex3dv)glXGetProcAddressARB((const GLubyte*)"glVertex3dv");
	bo_glVertex3fv = (_glVertex3fv)glXGetProcAddressARB((const GLubyte*)"glVertex3fv");
	bo_glVertex3iv = (_glVertex3iv)glXGetProcAddressARB((const GLubyte*)"glVertex3iv");
	bo_glVertex3sv = (_glVertex3sv)glXGetProcAddressARB((const GLubyte*)"glVertex3sv");
	bo_glVertex4dv = (_glVertex4dv)glXGetProcAddressARB((const GLubyte*)"glVertex4dv");
	bo_glVertex4fv = (_glVertex4fv)glXGetProcAddressARB((const GLubyte*)"glVertex4fv");
	bo_glVertex4iv = (_glVertex4iv)glXGetProcAddressARB((const GLubyte*)"glVertex4iv");
	bo_glVertex4sv = (_glVertex4sv)glXGetProcAddressARB((const GLubyte*)"glVertex4sv");
	bo_glTexCoord1d = (_glTexCoord1d)glXGetProcAddressARB((const GLubyte*)"glTexCoord1d");
	bo_glTexCoord1f = (_glTexCoord1f)glXGetProcAddressARB((const GLubyte*)"glTexCoord1f");
	bo_glTexCoord1i = (_glTexCoord1i)glXGetProcAddressARB((const GLubyte*)"glTexCoord1i");
	bo_glTexCoord1s = (_glTexCoord1s)glXGetProcAddressARB((const GLubyte*)"glTexCoord1s");
	bo_glTexCoord2d = (_glTexCoord2d)glXGetProcAddressARB((const GLubyte*)"glTexCoord2d");
	bo_glTexCoord2f = (_glTexCoord2f)glXGetProcAddressARB((const GLubyte*)"glTexCoord2f");
	bo_glTexCoord2i = (_glTexCoord2i)glXGetProcAddressARB((const GLubyte*)"glTexCoord2i");
	bo_glTexCoord2s = (_glTexCoord2s)glXGetProcAddressARB((const GLubyte*)"glTexCoord2s");
	bo_glTexCoord3d = (_glTexCoord3d)glXGetProcAddressARB((const GLubyte*)"glTexCoord3d");
	bo_glTexCoord3f = (_glTexCoord3f)glXGetProcAddressARB((const GLubyte*)"glTexCoord3f");
	bo_glTexCoord3i = (_glTexCoord3i)glXGetProcAddressARB((const GLubyte*)"glTexCoord3i");
	bo_glTexCoord3s = (_glTexCoord3s)glXGetProcAddressARB((const GLubyte*)"glTexCoord3s");
	bo_glTexCoord4d = (_glTexCoord4d)glXGetProcAddressARB((const GLubyte*)"glTexCoord4d");
	bo_glTexCoord4f = (_glTexCoord4f)glXGetProcAddressARB((const GLubyte*)"glTexCoord4f");
	bo_glTexCoord4i = (_glTexCoord4i)glXGetProcAddressARB((const GLubyte*)"glTexCoord4i");
	bo_glTexCoord4s = (_glTexCoord4s)glXGetProcAddressARB((const GLubyte*)"glTexCoord4s");
	bo_glTexCoord1dv = (_glTexCoord1dv)glXGetProcAddressARB((const GLubyte*)"glTexCoord1dv");
	bo_glTexCoord1fv = (_glTexCoord1fv)glXGetProcAddressARB((const GLubyte*)"glTexCoord1fv");
	bo_glTexCoord1iv = (_glTexCoord1iv)glXGetProcAddressARB((const GLubyte*)"glTexCoord1iv");
	bo_glTexCoord1sv = (_glTexCoord1sv)glXGetProcAddressARB((const GLubyte*)"glTexCoord1sv");
	bo_glTexCoord2dv = (_glTexCoord2dv)glXGetProcAddressARB((const GLubyte*)"glTexCoord2dv");
	bo_glTexCoord2fv = (_glTexCoord2fv)glXGetProcAddressARB((const GLubyte*)"glTexCoord2fv");
	bo_glTexCoord2iv = (_glTexCoord2iv)glXGetProcAddressARB((const GLubyte*)"glTexCoord2iv");
	bo_glTexCoord2sv = (_glTexCoord2sv)glXGetProcAddressARB((const GLubyte*)"glTexCoord2sv");
	bo_glTexCoord3dv = (_glTexCoord3dv)glXGetProcAddressARB((const GLubyte*)"glTexCoord3dv");
	bo_glTexCoord3fv = (_glTexCoord3fv)glXGetProcAddressARB((const GLubyte*)"glTexCoord3fv");
	bo_glTexCoord3iv = (_glTexCoord3iv)glXGetProcAddressARB((const GLubyte*)"glTexCoord3iv");
	bo_glTexCoord3sv = (_glTexCoord3sv)glXGetProcAddressARB((const GLubyte*)"glTexCoord3sv");
	bo_glTexCoord4dv = (_glTexCoord4dv)glXGetProcAddressARB((const GLubyte*)"glTexCoord4dv");
	bo_glTexCoord4fv = (_glTexCoord4fv)glXGetProcAddressARB((const GLubyte*)"glTexCoord4fv");
	bo_glTexCoord4iv = (_glTexCoord4iv)glXGetProcAddressARB((const GLubyte*)"glTexCoord4iv");
	bo_glTexCoord4sv = (_glTexCoord4sv)glXGetProcAddressARB((const GLubyte*)"glTexCoord4sv");
	bo_glNormal3b = (_glNormal3b)glXGetProcAddressARB((const GLubyte*)"glNormal3b");
	bo_glNormal3d = (_glNormal3d)glXGetProcAddressARB((const GLubyte*)"glNormal3d");
	bo_glNormal3f = (_glNormal3f)glXGetProcAddressARB((const GLubyte*)"glNormal3f");
	bo_glNormal3i = (_glNormal3i)glXGetProcAddressARB((const GLubyte*)"glNormal3i");
	bo_glNormal3s = (_glNormal3s)glXGetProcAddressARB((const GLubyte*)"glNormal3s");
	bo_glNormal3bv = (_glNormal3bv)glXGetProcAddressARB((const GLubyte*)"glNormal3bv");
	bo_glNormal3dv = (_glNormal3dv)glXGetProcAddressARB((const GLubyte*)"glNormal3dv");
	bo_glNormal3fv = (_glNormal3fv)glXGetProcAddressARB((const GLubyte*)"glNormal3fv");
	bo_glNormal3iv = (_glNormal3iv)glXGetProcAddressARB((const GLubyte*)"glNormal3iv");
	bo_glNormal3sv = (_glNormal3sv)glXGetProcAddressARB((const GLubyte*)"glNormal3sv");
	bo_glColor3b = (_glColor3b)glXGetProcAddressARB((const GLubyte*)"glColor3b");
	bo_glColor3d = (_glColor3d)glXGetProcAddressARB((const GLubyte*)"glColor3d");
	bo_glColor3f = (_glColor3f)glXGetProcAddressARB((const GLubyte*)"glColor3f");
	bo_glColor3i = (_glColor3i)glXGetProcAddressARB((const GLubyte*)"glColor3i");
	bo_glColor3s = (_glColor3s)glXGetProcAddressARB((const GLubyte*)"glColor3s");
	bo_glColor3ub = (_glColor3ub)glXGetProcAddressARB((const GLubyte*)"glColor3ub");
	bo_glColor3ui = (_glColor3ui)glXGetProcAddressARB((const GLubyte*)"glColor3ui");
	bo_glColor3us = (_glColor3us)glXGetProcAddressARB((const GLubyte*)"glColor3us");
	bo_glColor4b = (_glColor4b)glXGetProcAddressARB((const GLubyte*)"glColor4b");
	bo_glColor4d = (_glColor4d)glXGetProcAddressARB((const GLubyte*)"glColor4d");
	bo_glColor4f = (_glColor4f)glXGetProcAddressARB((const GLubyte*)"glColor4f");
	bo_glColor4i = (_glColor4i)glXGetProcAddressARB((const GLubyte*)"glColor4i");
	bo_glColor4s = (_glColor4s)glXGetProcAddressARB((const GLubyte*)"glColor4s");
	bo_glColor4ub = (_glColor4ub)glXGetProcAddressARB((const GLubyte*)"glColor4ub");
	bo_glColor4ui = (_glColor4ui)glXGetProcAddressARB((const GLubyte*)"glColor4ui");
	bo_glColor4us = (_glColor4us)glXGetProcAddressARB((const GLubyte*)"glColor4us");
	bo_glColor3bv = (_glColor3bv)glXGetProcAddressARB((const GLubyte*)"glColor3bv");
	bo_glColor3dv = (_glColor3dv)glXGetProcAddressARB((const GLubyte*)"glColor3dv");
	bo_glColor3fv = (_glColor3fv)glXGetProcAddressARB((const GLubyte*)"glColor3fv");
	bo_glColor3iv = (_glColor3iv)glXGetProcAddressARB((const GLubyte*)"glColor3iv");
	bo_glColor3sv = (_glColor3sv)glXGetProcAddressARB((const GLubyte*)"glColor3sv");
	bo_glColor3ubv = (_glColor3ubv)glXGetProcAddressARB((const GLubyte*)"glColor3ubv");
	bo_glColor3uiv = (_glColor3uiv)glXGetProcAddressARB((const GLubyte*)"glColor3uiv");
	bo_glColor3usv = (_glColor3usv)glXGetProcAddressARB((const GLubyte*)"glColor3usv");
	bo_glColor4bv = (_glColor4bv)glXGetProcAddressARB((const GLubyte*)"glColor4bv");
	bo_glColor4dv = (_glColor4dv)glXGetProcAddressARB((const GLubyte*)"glColor4dv");
	bo_glColor4fv = (_glColor4fv)glXGetProcAddressARB((const GLubyte*)"glColor4fv");
	bo_glColor4iv = (_glColor4iv)glXGetProcAddressARB((const GLubyte*)"glColor4iv");
	bo_glColor4sv = (_glColor4sv)glXGetProcAddressARB((const GLubyte*)"glColor4sv");
	bo_glColor4ubv = (_glColor4ubv)glXGetProcAddressARB((const GLubyte*)"glColor4ubv");
	bo_glColor4uiv = (_glColor4uiv)glXGetProcAddressARB((const GLubyte*)"glColor4uiv");
	bo_glColor4usv = (_glColor4usv)glXGetProcAddressARB((const GLubyte*)"glColor4usv");
	bo_glIndexd = (_glIndexd)glXGetProcAddressARB((const GLubyte*)"glIndexd");
	bo_glIndexf = (_glIndexf)glXGetProcAddressARB((const GLubyte*)"glIndexf");
	bo_glIndexi = (_glIndexi)glXGetProcAddressARB((const GLubyte*)"glIndexi");
	bo_glIndexs = (_glIndexs)glXGetProcAddressARB((const GLubyte*)"glIndexs");
	bo_glIndexub = (_glIndexub)glXGetProcAddressARB((const GLubyte*)"glIndexub");
	bo_glIndexdv = (_glIndexdv)glXGetProcAddressARB((const GLubyte*)"glIndexdv");
	bo_glIndexfv = (_glIndexfv)glXGetProcAddressARB((const GLubyte*)"glIndexfv");
	bo_glIndexiv = (_glIndexiv)glXGetProcAddressARB((const GLubyte*)"glIndexiv");
	bo_glIndexsv = (_glIndexsv)glXGetProcAddressARB((const GLubyte*)"glIndexsv");
	bo_glIndexubv = (_glIndexubv)glXGetProcAddressARB((const GLubyte*)"glIndexubv");
	bo_glRectd = (_glRectd)glXGetProcAddressARB((const GLubyte*)"glRectd");
	bo_glRectf = (_glRectf)glXGetProcAddressARB((const GLubyte*)"glRectf");
	bo_glRecti = (_glRecti)glXGetProcAddressARB((const GLubyte*)"glRecti");
	bo_glRects = (_glRects)glXGetProcAddressARB((const GLubyte*)"glRects");
	bo_glRectdv = (_glRectdv)glXGetProcAddressARB((const GLubyte*)"glRectdv");
	bo_glRectfv = (_glRectfv)glXGetProcAddressARB((const GLubyte*)"glRectfv");
	bo_glRectiv = (_glRectiv)glXGetProcAddressARB((const GLubyte*)"glRectiv");
	bo_glRectsv = (_glRectsv)glXGetProcAddressARB((const GLubyte*)"glRectsv");
	bo_glDepthRange = (_glDepthRange)glXGetProcAddressARB((const GLubyte*)"glDepthRange");
	bo_glViewport = (_glViewport)glXGetProcAddressARB((const GLubyte*)"glViewport");
	bo_glMatrixMode = (_glMatrixMode)glXGetProcAddressARB((const GLubyte*)"glMatrixMode");
	bo_glLoadMatrixd = (_glLoadMatrixd)glXGetProcAddressARB((const GLubyte*)"glLoadMatrixd");
	bo_glLoadMatrixf = (_glLoadMatrixf)glXGetProcAddressARB((const GLubyte*)"glLoadMatrixf");
	bo_glMultMatrixd = (_glMultMatrixd)glXGetProcAddressARB((const GLubyte*)"glMultMatrixd");
	bo_glMultMatrixf = (_glMultMatrixf)glXGetProcAddressARB((const GLubyte*)"glMultMatrixf");
	bo_glLoadIdentity = (_glLoadIdentity)glXGetProcAddressARB((const GLubyte*)"glLoadIdentity");
	bo_glRotated = (_glRotated)glXGetProcAddressARB((const GLubyte*)"glRotated");
	bo_glRotatef = (_glRotatef)glXGetProcAddressARB((const GLubyte*)"glRotatef");
	bo_glTranslated = (_glTranslated)glXGetProcAddressARB((const GLubyte*)"glTranslated");
	bo_glTranslatef = (_glTranslatef)glXGetProcAddressARB((const GLubyte*)"glTranslatef");
	bo_glScaled = (_glScaled)glXGetProcAddressARB((const GLubyte*)"glScaled");
	bo_glScalef = (_glScalef)glXGetProcAddressARB((const GLubyte*)"glScalef");
	bo_glFrustum = (_glFrustum)glXGetProcAddressARB((const GLubyte*)"glFrustum");
	bo_glOrtho = (_glOrtho)glXGetProcAddressARB((const GLubyte*)"glOrtho");
	bo_glPushMatrix = (_glPushMatrix)glXGetProcAddressARB((const GLubyte*)"glPushMatrix");
	bo_glPopMatrix = (_glPopMatrix)glXGetProcAddressARB((const GLubyte*)"glPopMatrix");
	bo_glEnable = (_glEnable)glXGetProcAddressARB((const GLubyte*)"glEnable");
	bo_glDisable = (_glDisable)glXGetProcAddressARB((const GLubyte*)"glDisable");
	bo_glTexGend = (_glTexGend)glXGetProcAddressARB((const GLubyte*)"glTexGend");
	bo_glTexGenf = (_glTexGenf)glXGetProcAddressARB((const GLubyte*)"glTexGenf");
	bo_glTexGeni = (_glTexGeni)glXGetProcAddressARB((const GLubyte*)"glTexGeni");
	bo_glTexGendv = (_glTexGendv)glXGetProcAddressARB((const GLubyte*)"glTexGendv");
	bo_glTexGenfv = (_glTexGenfv)glXGetProcAddressARB((const GLubyte*)"glTexGenfv");
	bo_glTexGeniv = (_glTexGeniv)glXGetProcAddressARB((const GLubyte*)"glTexGeniv");
	bo_glClipPlane = (_glClipPlane)glXGetProcAddressARB((const GLubyte*)"glClipPlane");
	bo_glRasterPos2d = (_glRasterPos2d)glXGetProcAddressARB((const GLubyte*)"glRasterPos2d");
	bo_glRasterPos2f = (_glRasterPos2f)glXGetProcAddressARB((const GLubyte*)"glRasterPos2f");
	bo_glRasterPos2i = (_glRasterPos2i)glXGetProcAddressARB((const GLubyte*)"glRasterPos2i");
	bo_glRasterPos2s = (_glRasterPos2s)glXGetProcAddressARB((const GLubyte*)"glRasterPos2s");
	bo_glRasterPos3d = (_glRasterPos3d)glXGetProcAddressARB((const GLubyte*)"glRasterPos3d");
	bo_glRasterPos3f = (_glRasterPos3f)glXGetProcAddressARB((const GLubyte*)"glRasterPos3f");
	bo_glRasterPos3i = (_glRasterPos3i)glXGetProcAddressARB((const GLubyte*)"glRasterPos3i");
	bo_glRasterPos3s = (_glRasterPos3s)glXGetProcAddressARB((const GLubyte*)"glRasterPos3s");
	bo_glRasterPos4d = (_glRasterPos4d)glXGetProcAddressARB((const GLubyte*)"glRasterPos4d");
	bo_glRasterPos4f = (_glRasterPos4f)glXGetProcAddressARB((const GLubyte*)"glRasterPos4f");
	bo_glRasterPos4i = (_glRasterPos4i)glXGetProcAddressARB((const GLubyte*)"glRasterPos4i");
	bo_glRasterPos4s = (_glRasterPos4s)glXGetProcAddressARB((const GLubyte*)"glRasterPos4s");
	bo_glRasterPos2dv = (_glRasterPos2dv)glXGetProcAddressARB((const GLubyte*)"glRasterPos2dv");
	bo_glRasterPos2fv = (_glRasterPos2fv)glXGetProcAddressARB((const GLubyte*)"glRasterPos2fv");
	bo_glRasterPos2iv = (_glRasterPos2iv)glXGetProcAddressARB((const GLubyte*)"glRasterPos2iv");
	bo_glRasterPos2sv = (_glRasterPos2sv)glXGetProcAddressARB((const GLubyte*)"glRasterPos2sv");
	bo_glRasterPos3dv = (_glRasterPos3dv)glXGetProcAddressARB((const GLubyte*)"glRasterPos3dv");
	bo_glRasterPos3fv = (_glRasterPos3fv)glXGetProcAddressARB((const GLubyte*)"glRasterPos3fv");
	bo_glRasterPos3iv = (_glRasterPos3iv)glXGetProcAddressARB((const GLubyte*)"glRasterPos3iv");
	bo_glRasterPos3sv = (_glRasterPos3sv)glXGetProcAddressARB((const GLubyte*)"glRasterPos3sv");
	bo_glRasterPos4dv = (_glRasterPos4dv)glXGetProcAddressARB((const GLubyte*)"glRasterPos4dv");
	bo_glRasterPos4fv = (_glRasterPos4fv)glXGetProcAddressARB((const GLubyte*)"glRasterPos4fv");
	bo_glRasterPos4iv = (_glRasterPos4iv)glXGetProcAddressARB((const GLubyte*)"glRasterPos4iv");
	bo_glRasterPos4sv = (_glRasterPos4sv)glXGetProcAddressARB((const GLubyte*)"glRasterPos4sv");
	bo_glMaterialf = (_glMaterialf)glXGetProcAddressARB((const GLubyte*)"glMaterialf");
	bo_glMateriali = (_glMateriali)glXGetProcAddressARB((const GLubyte*)"glMateriali");
	bo_glMaterialfv = (_glMaterialfv)glXGetProcAddressARB((const GLubyte*)"glMaterialfv");
	bo_glMaterialiv = (_glMaterialiv)glXGetProcAddressARB((const GLubyte*)"glMaterialiv");
	bo_glFrontFace = (_glFrontFace)glXGetProcAddressARB((const GLubyte*)"glFrontFace");
	bo_glLightf = (_glLightf)glXGetProcAddressARB((const GLubyte*)"glLightf");
	bo_glLighti = (_glLighti)glXGetProcAddressARB((const GLubyte*)"glLighti");
	bo_glLightfv = (_glLightfv)glXGetProcAddressARB((const GLubyte*)"glLightfv");
	bo_glLightiv = (_glLightiv)glXGetProcAddressARB((const GLubyte*)"glLightiv");
	bo_glLightModelf = (_glLightModelf)glXGetProcAddressARB((const GLubyte*)"glLightModelf");
	bo_glLightModeli = (_glLightModeli)glXGetProcAddressARB((const GLubyte*)"glLightModeli");
	bo_glLightModelfv = (_glLightModelfv)glXGetProcAddressARB((const GLubyte*)"glLightModelfv");
	bo_glLightModeliv = (_glLightModeliv)glXGetProcAddressARB((const GLubyte*)"glLightModeliv");
	bo_glColorMaterial = (_glColorMaterial)glXGetProcAddressARB((const GLubyte*)"glColorMaterial");
	bo_glShadeModel = (_glShadeModel)glXGetProcAddressARB((const GLubyte*)"glShadeModel");
	bo_glPointSize = (_glPointSize)glXGetProcAddressARB((const GLubyte*)"glPointSize");
	bo_glLineWidth = (_glLineWidth)glXGetProcAddressARB((const GLubyte*)"glLineWidth");
	bo_glLineStipple = (_glLineStipple)glXGetProcAddressARB((const GLubyte*)"glLineStipple");
	bo_glCullFace = (_glCullFace)glXGetProcAddressARB((const GLubyte*)"glCullFace");
	bo_glPolygonStipple = (_glPolygonStipple)glXGetProcAddressARB((const GLubyte*)"glPolygonStipple");
	bo_glPolygonMode = (_glPolygonMode)glXGetProcAddressARB((const GLubyte*)"glPolygonMode");
	bo_glPolygonOffset = (_glPolygonOffset)glXGetProcAddressARB((const GLubyte*)"glPolygonOffset");
	bo_glPixelStoref = (_glPixelStoref)glXGetProcAddressARB((const GLubyte*)"glPixelStoref");
	bo_glPixelStorei = (_glPixelStorei)glXGetProcAddressARB((const GLubyte*)"glPixelStorei");
	bo_glPixelTransferf = (_glPixelTransferf)glXGetProcAddressARB((const GLubyte*)"glPixelTransferf");
	bo_glPixelTransferi = (_glPixelTransferi)glXGetProcAddressARB((const GLubyte*)"glPixelTransferi");
	bo_glPixelMapfv = (_glPixelMapfv)glXGetProcAddressARB((const GLubyte*)"glPixelMapfv");
	bo_glPixelMapuiv = (_glPixelMapuiv)glXGetProcAddressARB((const GLubyte*)"glPixelMapuiv");
	bo_glPixelMapusv = (_glPixelMapusv)glXGetProcAddressARB((const GLubyte*)"glPixelMapusv");
	bo_glDrawPixels = (_glDrawPixels)glXGetProcAddressARB((const GLubyte*)"glDrawPixels");
	bo_glPixelZoom = (_glPixelZoom)glXGetProcAddressARB((const GLubyte*)"glPixelZoom");
	bo_glBitmap = (_glBitmap)glXGetProcAddressARB((const GLubyte*)"glBitmap");
	bo_glTexImage1D = (_glTexImage1D)glXGetProcAddressARB((const GLubyte*)"glTexImage1D");
	bo_glTexImage2D = (_glTexImage2D)glXGetProcAddressARB((const GLubyte*)"glTexImage2D");
	bo_glCopyTexImage1D = (_glCopyTexImage1D)glXGetProcAddressARB((const GLubyte*)"glCopyTexImage1D");
	bo_glCopyTexImage2D = (_glCopyTexImage2D)glXGetProcAddressARB((const GLubyte*)"glCopyTexImage2D");
	bo_glTexSubImage1D = (_glTexSubImage1D)glXGetProcAddressARB((const GLubyte*)"glTexSubImage1D");
	bo_glTexSubImage2D = (_glTexSubImage2D)glXGetProcAddressARB((const GLubyte*)"glTexSubImage2D");
	bo_glCopyTexSubImage1D = (_glCopyTexSubImage1D)glXGetProcAddressARB((const GLubyte*)"glCopyTexSubImage1D");
	bo_glCopyTexSubImage2D = (_glCopyTexSubImage2D)glXGetProcAddressARB((const GLubyte*)"glCopyTexSubImage2D");
	bo_glTexParameterf = (_glTexParameterf)glXGetProcAddressARB((const GLubyte*)"glTexParameterf");
	bo_glTexParameteri = (_glTexParameteri)glXGetProcAddressARB((const GLubyte*)"glTexParameteri");
	bo_glTexParameterfv = (_glTexParameterfv)glXGetProcAddressARB((const GLubyte*)"glTexParameterfv");
	bo_glTexParameteriv = (_glTexParameteriv)glXGetProcAddressARB((const GLubyte*)"glTexParameteriv");
	bo_glBindTexture = (_glBindTexture)glXGetProcAddressARB((const GLubyte*)"glBindTexture");
	bo_glDeleteTextures = (_glDeleteTextures)glXGetProcAddressARB((const GLubyte*)"glDeleteTextures");
	bo_glGenTextures = (_glGenTextures)glXGetProcAddressARB((const GLubyte*)"glGenTextures");
	bo_glAreTexturesResident = (_glAreTexturesResident)glXGetProcAddressARB((const GLubyte*)"glAreTexturesResident");
	bo_glPrioritizeTextures = (_glPrioritizeTextures)glXGetProcAddressARB((const GLubyte*)"glPrioritizeTextures");
	bo_glTexEnvf = (_glTexEnvf)glXGetProcAddressARB((const GLubyte*)"glTexEnvf");
	bo_glTexEnvi = (_glTexEnvi)glXGetProcAddressARB((const GLubyte*)"glTexEnvi");
	bo_glTexEnvfv = (_glTexEnvfv)glXGetProcAddressARB((const GLubyte*)"glTexEnvfv");
	bo_glTexEnviv = (_glTexEnviv)glXGetProcAddressARB((const GLubyte*)"glTexEnviv");
	bo_glFogf = (_glFogf)glXGetProcAddressARB((const GLubyte*)"glFogf");
	bo_glFogi = (_glFogi)glXGetProcAddressARB((const GLubyte*)"glFogi");
	bo_glFogfv = (_glFogfv)glXGetProcAddressARB((const GLubyte*)"glFogfv");
	bo_glFogiv = (_glFogiv)glXGetProcAddressARB((const GLubyte*)"glFogiv");
	bo_glScissor = (_glScissor)glXGetProcAddressARB((const GLubyte*)"glScissor");
	bo_glAlphaFunc = (_glAlphaFunc)glXGetProcAddressARB((const GLubyte*)"glAlphaFunc");
	bo_glStencilFunc = (_glStencilFunc)glXGetProcAddressARB((const GLubyte*)"glStencilFunc");
	bo_glStencilOp = (_glStencilOp)glXGetProcAddressARB((const GLubyte*)"glStencilOp");
	bo_glDepthFunc = (_glDepthFunc)glXGetProcAddressARB((const GLubyte*)"glDepthFunc");
	bo_glBlendFunc = (_glBlendFunc)glXGetProcAddressARB((const GLubyte*)"glBlendFunc");
	bo_glLogicOp = (_glLogicOp)glXGetProcAddressARB((const GLubyte*)"glLogicOp");
	bo_glDrawBuffer = (_glDrawBuffer)glXGetProcAddressARB((const GLubyte*)"glDrawBuffer");
	bo_glIndexMask = (_glIndexMask)glXGetProcAddressARB((const GLubyte*)"glIndexMask");
	bo_glDepthMask = (_glDepthMask)glXGetProcAddressARB((const GLubyte*)"glDepthMask");
	bo_glColorMask = (_glColorMask)glXGetProcAddressARB((const GLubyte*)"glColorMask");
	bo_glStencilMask = (_glStencilMask)glXGetProcAddressARB((const GLubyte*)"glStencilMask");
	bo_glClear = (_glClear)glXGetProcAddressARB((const GLubyte*)"glClear");
	bo_glClearColor = (_glClearColor)glXGetProcAddressARB((const GLubyte*)"glClearColor");
	bo_glClearIndex = (_glClearIndex)glXGetProcAddressARB((const GLubyte*)"glClearIndex");
	bo_glClearDepth = (_glClearDepth)glXGetProcAddressARB((const GLubyte*)"glClearDepth");
	bo_glClearStencil = (_glClearStencil)glXGetProcAddressARB((const GLubyte*)"glClearStencil");
	bo_glClearAccum = (_glClearAccum)glXGetProcAddressARB((const GLubyte*)"glClearAccum");
	bo_glAccum = (_glAccum)glXGetProcAddressARB((const GLubyte*)"glAccum");
	bo_glReadPixels = (_glReadPixels)glXGetProcAddressARB((const GLubyte*)"glReadPixels");
	bo_glReadBuffer = (_glReadBuffer)glXGetProcAddressARB((const GLubyte*)"glReadBuffer");
	bo_glCopyPixels = (_glCopyPixels)glXGetProcAddressARB((const GLubyte*)"glCopyPixels");
	bo_glMap2d = (_glMap2d)glXGetProcAddressARB((const GLubyte*)"glMap2d");
	bo_glMap2f = (_glMap2f)glXGetProcAddressARB((const GLubyte*)"glMap2f");
	bo_glMap1d = (_glMap1d)glXGetProcAddressARB((const GLubyte*)"glMap1d");
	bo_glMap1f = (_glMap1f)glXGetProcAddressARB((const GLubyte*)"glMap1f");
	bo_glEvalCoord1d = (_glEvalCoord1d)glXGetProcAddressARB((const GLubyte*)"glEvalCoord1d");
	bo_glEvalCoord1f = (_glEvalCoord1f)glXGetProcAddressARB((const GLubyte*)"glEvalCoord1f");
	bo_glEvalCoord1dv = (_glEvalCoord1dv)glXGetProcAddressARB((const GLubyte*)"glEvalCoord1dv");
	bo_glEvalCoord1fv = (_glEvalCoord1fv)glXGetProcAddressARB((const GLubyte*)"glEvalCoord1fv");
	bo_glEvalCoord2d = (_glEvalCoord2d)glXGetProcAddressARB((const GLubyte*)"glEvalCoord2d");
	bo_glEvalCoord2f = (_glEvalCoord2f)glXGetProcAddressARB((const GLubyte*)"glEvalCoord2f");
	bo_glEvalCoord2dv = (_glEvalCoord2dv)glXGetProcAddressARB((const GLubyte*)"glEvalCoord2dv");
	bo_glEvalCoord2fv = (_glEvalCoord2fv)glXGetProcAddressARB((const GLubyte*)"glEvalCoord2fv");
	bo_glMapGrid1d = (_glMapGrid1d)glXGetProcAddressARB((const GLubyte*)"glMapGrid1d");
	bo_glMapGrid1f = (_glMapGrid1f)glXGetProcAddressARB((const GLubyte*)"glMapGrid1f");
	bo_glMapGrid2d = (_glMapGrid2d)glXGetProcAddressARB((const GLubyte*)"glMapGrid2d");
	bo_glMapGrid2f = (_glMapGrid2f)glXGetProcAddressARB((const GLubyte*)"glMapGrid2f");
	bo_glEvalMesh1 = (_glEvalMesh1)glXGetProcAddressARB((const GLubyte*)"glEvalMesh1");
	bo_glEvalMesh2 = (_glEvalMesh2)glXGetProcAddressARB((const GLubyte*)"glEvalMesh2");
	bo_glEvalPoint1 = (_glEvalPoint1)glXGetProcAddressARB((const GLubyte*)"glEvalPoint1");
	bo_glEvalPoint2 = (_glEvalPoint2)glXGetProcAddressARB((const GLubyte*)"glEvalPoint2");
	bo_glInitNames = (_glInitNames)glXGetProcAddressARB((const GLubyte*)"glInitNames");
	bo_glLoadName = (_glLoadName)glXGetProcAddressARB((const GLubyte*)"glLoadName");
	bo_glPushName = (_glPushName)glXGetProcAddressARB((const GLubyte*)"glPushName");
	bo_glPopName = (_glPopName)glXGetProcAddressARB((const GLubyte*)"glPopName");
	bo_glRenderMode = (_glRenderMode)glXGetProcAddressARB((const GLubyte*)"glRenderMode");
	bo_glSelectBuffer = (_glSelectBuffer)glXGetProcAddressARB((const GLubyte*)"glSelectBuffer");
	bo_glFeedbackBuffer = (_glFeedbackBuffer)glXGetProcAddressARB((const GLubyte*)"glFeedbackBuffer");
	bo_glPassThrough = (_glPassThrough)glXGetProcAddressARB((const GLubyte*)"glPassThrough");
	bo_glNewList = (_glNewList)glXGetProcAddressARB((const GLubyte*)"glNewList");
	bo_glEndList = (_glEndList)glXGetProcAddressARB((const GLubyte*)"glEndList");
	bo_glCallList = (_glCallList)glXGetProcAddressARB((const GLubyte*)"glCallList");
	bo_glCallLists = (_glCallLists)glXGetProcAddressARB((const GLubyte*)"glCallLists");
	bo_glListBase = (_glListBase)glXGetProcAddressARB((const GLubyte*)"glListBase");
	bo_glGenLists = (_glGenLists)glXGetProcAddressARB((const GLubyte*)"glGenLists");
	bo_glIsList = (_glIsList)glXGetProcAddressARB((const GLubyte*)"glIsList");
	bo_glDeleteLists = (_glDeleteLists)glXGetProcAddressARB((const GLubyte*)"glDeleteLists");
	bo_glFlush = (_glFlush)glXGetProcAddressARB((const GLubyte*)"glFlush");
	bo_glFinish = (_glFinish)glXGetProcAddressARB((const GLubyte*)"glFinish");
	bo_glHint = (_glHint)glXGetProcAddressARB((const GLubyte*)"glHint");
	bo_glGetBooleanv = (_glGetBooleanv)glXGetProcAddressARB((const GLubyte*)"glGetBooleanv");
	bo_glGetIntegerv = (_glGetIntegerv)glXGetProcAddressARB((const GLubyte*)"glGetIntegerv");
	bo_glGetDoublev = (_glGetDoublev)glXGetProcAddressARB((const GLubyte*)"glGetDoublev");
	bo_glGetFloatv = (_glGetFloatv)glXGetProcAddressARB((const GLubyte*)"glGetFloatv");
	bo_glIsEnabled = (_glIsEnabled)glXGetProcAddressARB((const GLubyte*)"glIsEnabled");
	bo_glGetClipPlane = (_glGetClipPlane)glXGetProcAddressARB((const GLubyte*)"glGetClipPlane");
	bo_glGetLightfv = (_glGetLightfv)glXGetProcAddressARB((const GLubyte*)"glGetLightfv");
	bo_glGetLightiv = (_glGetLightiv)glXGetProcAddressARB((const GLubyte*)"glGetLightiv");
	bo_glGetMaterialfv = (_glGetMaterialfv)glXGetProcAddressARB((const GLubyte*)"glGetMaterialfv");
	bo_glGetMaterialiv = (_glGetMaterialiv)glXGetProcAddressARB((const GLubyte*)"glGetMaterialiv");
	bo_glGetTexEnvfv = (_glGetTexEnvfv)glXGetProcAddressARB((const GLubyte*)"glGetTexEnvfv");
	bo_glGetTexEnviv = (_glGetTexEnviv)glXGetProcAddressARB((const GLubyte*)"glGetTexEnviv");
	bo_glGetTexGendv = (_glGetTexGendv)glXGetProcAddressARB((const GLubyte*)"glGetTexGendv");
	bo_glGetTexGenfv = (_glGetTexGenfv)glXGetProcAddressARB((const GLubyte*)"glGetTexGenfv");
	bo_glGetTexGeniv = (_glGetTexGeniv)glXGetProcAddressARB((const GLubyte*)"glGetTexGeniv");
	bo_glGetTexParameterfv = (_glGetTexParameterfv)glXGetProcAddressARB((const GLubyte*)"glGetTexParameterfv");
	bo_glGetTexParameteriv = (_glGetTexParameteriv)glXGetProcAddressARB((const GLubyte*)"glGetTexParameteriv");
	bo_glGetTexLevelParameterfv = (_glGetTexLevelParameterfv)glXGetProcAddressARB((const GLubyte*)"glGetTexLevelParameterfv");
	bo_glGetTexLevelParameteriv = (_glGetTexLevelParameteriv)glXGetProcAddressARB((const GLubyte*)"glGetTexLevelParameteriv");
	bo_glGetPixelMapfv = (_glGetPixelMapfv)glXGetProcAddressARB((const GLubyte*)"glGetPixelMapfv");
	bo_glGetPixelMapuiv = (_glGetPixelMapuiv)glXGetProcAddressARB((const GLubyte*)"glGetPixelMapuiv");
	bo_glGetPixelMapusv = (_glGetPixelMapusv)glXGetProcAddressARB((const GLubyte*)"glGetPixelMapusv");
	bo_glGetMapdv = (_glGetMapdv)glXGetProcAddressARB((const GLubyte*)"glGetMapdv");
	bo_glGetMapfv = (_glGetMapfv)glXGetProcAddressARB((const GLubyte*)"glGetMapfv");
	bo_glGetMapiv = (_glGetMapiv)glXGetProcAddressARB((const GLubyte*)"glGetMapiv");
	bo_glGetTexImage = (_glGetTexImage)glXGetProcAddressARB((const GLubyte*)"glGetTexImage");
	bo_glIsTexture = (_glIsTexture)glXGetProcAddressARB((const GLubyte*)"glIsTexture");
	bo_glGetPolygonStipple = (_glGetPolygonStipple)glXGetProcAddressARB((const GLubyte*)"glGetPolygonStipple");
	bo_glGetPointerv = (_glGetPointerv)glXGetProcAddressARB((const GLubyte*)"glGetPointerv");
	bo_glGetString = (_glGetString)glXGetProcAddressARB((const GLubyte*)"glGetString");
	bo_glPushAttrib = (_glPushAttrib)glXGetProcAddressARB((const GLubyte*)"glPushAttrib");
	bo_glPopAttrib = (_glPopAttrib)glXGetProcAddressARB((const GLubyte*)"glPopAttrib");
	bo_glPushClientAttrib = (_glPushClientAttrib)glXGetProcAddressARB((const GLubyte*)"glPushClientAttrib");
	bo_glPopClientAttrib = (_glPopClientAttrib)glXGetProcAddressARB((const GLubyte*)"glPopClientAttrib");
	bo_glEdgeFlagPointer = (_glEdgeFlagPointer)glXGetProcAddressARB((const GLubyte*)"glEdgeFlagPointer");
	bo_glTexCoordPointer = (_glTexCoordPointer)glXGetProcAddressARB((const GLubyte*)"glTexCoordPointer");
	bo_glColorPointer = (_glColorPointer)glXGetProcAddressARB((const GLubyte*)"glColorPointer");
	bo_glIndexPointer = (_glIndexPointer)glXGetProcAddressARB((const GLubyte*)"glIndexPointer");
	bo_glNormalPointer = (_glNormalPointer)glXGetProcAddressARB((const GLubyte*)"glNormalPointer");
	bo_glVertexPointer = (_glVertexPointer)glXGetProcAddressARB((const GLubyte*)"glVertexPointer");
	bo_glEnableClientState = (_glEnableClientState)glXGetProcAddressARB((const GLubyte*)"glEnableClientState");
	bo_glDisableClientState = (_glDisableClientState)glXGetProcAddressARB((const GLubyte*)"glDisableClientState");
	bo_glArrayElement = (_glArrayElement)glXGetProcAddressARB((const GLubyte*)"glArrayElement");
	bo_glDrawArrays = (_glDrawArrays)glXGetProcAddressARB((const GLubyte*)"glDrawArrays");
	bo_glDrawElements = (_glDrawElements)glXGetProcAddressARB((const GLubyte*)"glDrawElements");
	bo_glInterleavedArrays = (_glInterleavedArrays)glXGetProcAddressARB((const GLubyte*)"glInterleavedArrays");

	// from bogl_1_2_decl_p.boglc
	bo_glTexImage3D = (_glTexImage3D)glXGetProcAddressARB((const GLubyte*)"glTexImage3D");
	bo_glTexSubImage3D = (_glTexSubImage3D)glXGetProcAddressARB((const GLubyte*)"glTexSubImage3D");
	bo_glCopyTexSubImage3D = (_glCopyTexSubImage3D)glXGetProcAddressARB((const GLubyte*)"glCopyTexSubImage3D");
	bo_glDrawRangeElements = (_glDrawRangeElements)glXGetProcAddressARB((const GLubyte*)"glDrawRangeElements");
	bo_glColorTable = (_glColorTable)glXGetProcAddressARB((const GLubyte*)"glColorTable");
	bo_glCopyColorTable = (_glCopyColorTable)glXGetProcAddressARB((const GLubyte*)"glCopyColorTable");
	bo_glColorTableParameteriv = (_glColorTableParameteriv)glXGetProcAddressARB((const GLubyte*)"glColorTableParameteriv");
	bo_glColorTableParameterfv = (_glColorTableParameterfv)glXGetProcAddressARB((const GLubyte*)"glColorTableParameterfv");
	bo_glGetColorTable = (_glGetColorTable)glXGetProcAddressARB((const GLubyte*)"glGetColorTable");
	bo_glGetColorTableParameterfv = (_glGetColorTableParameterfv)glXGetProcAddressARB((const GLubyte*)"glGetColorTableParameterfv");
	bo_glGetColorTableParameteriv = (_glGetColorTableParameteriv)glXGetProcAddressARB((const GLubyte*)"glGetColorTableParameteriv");
	bo_glColorSubTable = (_glColorSubTable)glXGetProcAddressARB((const GLubyte*)"glColorSubTable");
	bo_glCopyColorSubTable = (_glCopyColorSubTable)glXGetProcAddressARB((const GLubyte*)"glCopyColorSubTable");
	bo_glConvolutionFilter1D = (_glConvolutionFilter1D)glXGetProcAddressARB((const GLubyte*)"glConvolutionFilter1D");
	bo_glConvolutionFilter2D = (_glConvolutionFilter2D)glXGetProcAddressARB((const GLubyte*)"glConvolutionFilter2D");
	bo_glCopyConvolutionFilter1D = (_glCopyConvolutionFilter1D)glXGetProcAddressARB((const GLubyte*)"glCopyConvolutionFilter1D");
	bo_glCopyConvolutionFilter2D = (_glCopyConvolutionFilter2D)glXGetProcAddressARB((const GLubyte*)"glCopyConvolutionFilter2D");
	bo_glGetConvolutionFilter = (_glGetConvolutionFilter)glXGetProcAddressARB((const GLubyte*)"glGetConvolutionFilter");
	bo_glSeparableFilter2D = (_glSeparableFilter2D)glXGetProcAddressARB((const GLubyte*)"glSeparableFilter2D");
	bo_glGetSeparableFilter = (_glGetSeparableFilter)glXGetProcAddressARB((const GLubyte*)"glGetSeparableFilter");
	bo_glConvolutionParameterf = (_glConvolutionParameterf)glXGetProcAddressARB((const GLubyte*)"glConvolutionParameterf");
	bo_glConvolutionParameterfv = (_glConvolutionParameterfv)glXGetProcAddressARB((const GLubyte*)"glConvolutionParameterfv");
	bo_glConvolutionParameteri = (_glConvolutionParameteri)glXGetProcAddressARB((const GLubyte*)"glConvolutionParameteri");
	bo_glConvolutionParameteriv = (_glConvolutionParameteriv)glXGetProcAddressARB((const GLubyte*)"glConvolutionParameteriv");
	bo_glGetConvolutionParameterfv = (_glGetConvolutionParameterfv)glXGetProcAddressARB((const GLubyte*)"glGetConvolutionParameterfv");
	bo_glGetConvolutionParameteriv = (_glGetConvolutionParameteriv)glXGetProcAddressARB((const GLubyte*)"glGetConvolutionParameteriv");
	bo_glHistogram = (_glHistogram)glXGetProcAddressARB((const GLubyte*)"glHistogram");
	bo_glResetHistogram = (_glResetHistogram)glXGetProcAddressARB((const GLubyte*)"glResetHistogram");
	bo_glGetHistogram = (_glGetHistogram)glXGetProcAddressARB((const GLubyte*)"glGetHistogram");
	bo_glGetHistogramParameterfv = (_glGetHistogramParameterfv)glXGetProcAddressARB((const GLubyte*)"glGetHistogramParameterfv");
	bo_glGetHistogramParameteriv = (_glGetHistogramParameteriv)glXGetProcAddressARB((const GLubyte*)"glGetHistogramParameteriv");
	bo_glMinmax = (_glMinmax)glXGetProcAddressARB((const GLubyte*)"glMinmax");
	bo_glResetMinmax = (_glResetMinmax)glXGetProcAddressARB((const GLubyte*)"glResetMinmax");
	bo_glGetMinmax = (_glGetMinmax)glXGetProcAddressARB((const GLubyte*)"glGetMinmax");
	bo_glGetMinmaxParameterfv = (_glGetMinmaxParameterfv)glXGetProcAddressARB((const GLubyte*)"glGetMinmaxParameterfv");
	bo_glGetMinmaxParameteriv = (_glGetMinmaxParameteriv)glXGetProcAddressARB((const GLubyte*)"glGetMinmaxParameteriv");
	bo_glBlendColor = (_glBlendColor)glXGetProcAddressARB((const GLubyte*)"glBlendColor");
	bo_glBlendEquation = (_glBlendEquation)glXGetProcAddressARB((const GLubyte*)"glBlendEquation");

	// from bogl_1_3_decl_p.boglc
	bo_glCompressedTexImage1D = (_glCompressedTexImage1D)glXGetProcAddressARB((const GLubyte*)"glCompressedTexImage1D");
	bo_glCompressedTexImage2D = (_glCompressedTexImage2D)glXGetProcAddressARB((const GLubyte*)"glCompressedTexImage2D");
	bo_glCompressedTexImage3D = (_glCompressedTexImage3D)glXGetProcAddressARB((const GLubyte*)"glCompressedTexImage3D");
	bo_glCompressedTexSubImage1D = (_glCompressedTexSubImage1D)glXGetProcAddressARB((const GLubyte*)"glCompressedTexSubImage1D");
	bo_glCompressedTexSubImage2D = (_glCompressedTexSubImage2D)glXGetProcAddressARB((const GLubyte*)"glCompressedTexSubImage2D");
	bo_glCompressedTexSubImage3D = (_glCompressedTexSubImage3D)glXGetProcAddressARB((const GLubyte*)"glCompressedTexSubImage3D");
	bo_glGetCompressedTexImage = (_glGetCompressedTexImage)glXGetProcAddressARB((const GLubyte*)"glGetCompressedTexImage");
	bo_glSampleCoverage = (_glSampleCoverage)glXGetProcAddressARB((const GLubyte*)"glSampleCoverage");
	bo_glMultiTexCoord1d = (_glMultiTexCoord1d)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord1d");
	bo_glMultiTexCoord1dv = (_glMultiTexCoord1dv)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord1dv");
	bo_glMultiTexCoord1f = (_glMultiTexCoord1f)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord1f");
	bo_glMultiTexCoord1fv = (_glMultiTexCoord1fv)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord1fv");
	bo_glMultiTexCoord1i = (_glMultiTexCoord1i)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord1i");
	bo_glMultiTexCoord1iv = (_glMultiTexCoord1iv)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord1iv");
	bo_glMultiTexCoord1s = (_glMultiTexCoord1s)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord1s");
	bo_glMultiTexCoord1sv = (_glMultiTexCoord1sv)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord1sv");
	bo_glMultiTexCoord2d = (_glMultiTexCoord2d)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord2d");
	bo_glMultiTexCoord2dv = (_glMultiTexCoord2dv)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord2dv");
	bo_glMultiTexCoord2f = (_glMultiTexCoord2f)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord2f");
	bo_glMultiTexCoord2fv = (_glMultiTexCoord2fv)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord2fv");
	bo_glMultiTexCoord2i = (_glMultiTexCoord2i)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord2i");
	bo_glMultiTexCoord2iv = (_glMultiTexCoord2iv)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord2iv");
	bo_glMultiTexCoord2s = (_glMultiTexCoord2s)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord2s");
	bo_glMultiTexCoord2sv = (_glMultiTexCoord2sv)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord2sv");
	bo_glMultiTexCoord3d = (_glMultiTexCoord3d)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord3d");
	bo_glMultiTexCoord3dv = (_glMultiTexCoord3dv)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord3dv");
	bo_glMultiTexCoord3f = (_glMultiTexCoord3f)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord3f");
	bo_glMultiTexCoord3fv = (_glMultiTexCoord3fv)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord3fv");
	bo_glMultiTexCoord3i = (_glMultiTexCoord3i)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord3i");
	bo_glMultiTexCoord3iv = (_glMultiTexCoord3iv)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord3iv");
	bo_glMultiTexCoord3s = (_glMultiTexCoord3s)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord3s");
	bo_glMultiTexCoord3sv = (_glMultiTexCoord3sv)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord3sv");
	bo_glMultiTexCoord4d = (_glMultiTexCoord4d)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord4d");
	bo_glMultiTexCoord4dv = (_glMultiTexCoord4dv)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord4dv");
	bo_glMultiTexCoord4f = (_glMultiTexCoord4f)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord4f");
	bo_glMultiTexCoord4fv = (_glMultiTexCoord4fv)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord4fv");
	bo_glMultiTexCoord4i = (_glMultiTexCoord4i)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord4i");
	bo_glMultiTexCoord4iv = (_glMultiTexCoord4iv)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord4iv");
	bo_glMultiTexCoord4s = (_glMultiTexCoord4s)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord4s");
	bo_glMultiTexCoord4sv = (_glMultiTexCoord4sv)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord4sv");
	bo_glClientActiveTexture = (_glClientActiveTexture)glXGetProcAddressARB((const GLubyte*)"glClientActiveTexture");
	bo_glActiveTexture = (_glActiveTexture)glXGetProcAddressARB((const GLubyte*)"glActiveTexture");
	bo_glLoadTransposeMatrixd = (_glLoadTransposeMatrixd)glXGetProcAddressARB((const GLubyte*)"glLoadTransposeMatrixd");
	bo_glLoadTransposeMatrixf = (_glLoadTransposeMatrixf)glXGetProcAddressARB((const GLubyte*)"glLoadTransposeMatrixf");
	bo_glMultTransposeMatrixd = (_glMultTransposeMatrixd)glXGetProcAddressARB((const GLubyte*)"glMultTransposeMatrixd");
	bo_glMultTransposeMatrixf = (_glMultTransposeMatrixf)glXGetProcAddressARB((const GLubyte*)"glMultTransposeMatrixf");

	// from bogl_1_4_decl_p.boglc
	bo_glFogCoordf = (_glFogCoordf)glXGetProcAddressARB((const GLubyte*)"glFogCoordf");
	bo_glFogCoordd = (_glFogCoordd)glXGetProcAddressARB((const GLubyte*)"glFogCoordd");
	bo_glFogCoordfv = (_glFogCoordfv)glXGetProcAddressARB((const GLubyte*)"glFogCoordfv");
	bo_glFogCoorddv = (_glFogCoorddv)glXGetProcAddressARB((const GLubyte*)"glFogCoorddv");
	bo_glFogCoordPointer = (_glFogCoordPointer)glXGetProcAddressARB((const GLubyte*)"glFogCoordPointer");
	bo_glMultiDrawArrays = (_glMultiDrawArrays)glXGetProcAddressARB((const GLubyte*)"glMultiDrawArrays");
	bo_glMultiDrawElements = (_glMultiDrawElements)glXGetProcAddressARB((const GLubyte*)"glMultiDrawElements");
	bo_glPointParameterf = (_glPointParameterf)glXGetProcAddressARB((const GLubyte*)"glPointParameterf");
	bo_glPointParameterfv = (_glPointParameterfv)glXGetProcAddressARB((const GLubyte*)"glPointParameterfv");
	bo_glPointParameteri = (_glPointParameteri)glXGetProcAddressARB((const GLubyte*)"glPointParameteri");
	bo_glPointParameteriv = (_glPointParameteriv)glXGetProcAddressARB((const GLubyte*)"glPointParameteriv");
	bo_glSecondaryColor3b = (_glSecondaryColor3b)glXGetProcAddressARB((const GLubyte*)"glSecondaryColor3b");
	bo_glSecondaryColor3s = (_glSecondaryColor3s)glXGetProcAddressARB((const GLubyte*)"glSecondaryColor3s");
	bo_glSecondaryColor3i = (_glSecondaryColor3i)glXGetProcAddressARB((const GLubyte*)"glSecondaryColor3i");
	bo_glSecondaryColor3f = (_glSecondaryColor3f)glXGetProcAddressARB((const GLubyte*)"glSecondaryColor3f");
	bo_glSecondaryColor3d = (_glSecondaryColor3d)glXGetProcAddressARB((const GLubyte*)"glSecondaryColor3d");
	bo_glSecondaryColor3bv = (_glSecondaryColor3bv)glXGetProcAddressARB((const GLubyte*)"glSecondaryColor3bv");
	bo_glSecondaryColor3sv = (_glSecondaryColor3sv)glXGetProcAddressARB((const GLubyte*)"glSecondaryColor3sv");
	bo_glSecondaryColor3iv = (_glSecondaryColor3iv)glXGetProcAddressARB((const GLubyte*)"glSecondaryColor3iv");
	bo_glSecondaryColor3fv = (_glSecondaryColor3fv)glXGetProcAddressARB((const GLubyte*)"glSecondaryColor3fv");
	bo_glSecondaryColor3dv = (_glSecondaryColor3dv)glXGetProcAddressARB((const GLubyte*)"glSecondaryColor3dv");
	bo_glSecondaryColor3ub = (_glSecondaryColor3ub)glXGetProcAddressARB((const GLubyte*)"glSecondaryColor3ub");
	bo_glSecondaryColor3us = (_glSecondaryColor3us)glXGetProcAddressARB((const GLubyte*)"glSecondaryColor3us");
	bo_glSecondaryColor3ui = (_glSecondaryColor3ui)glXGetProcAddressARB((const GLubyte*)"glSecondaryColor3ui");
	bo_glSecondaryColor3ubv = (_glSecondaryColor3ubv)glXGetProcAddressARB((const GLubyte*)"glSecondaryColor3ubv");
	bo_glSecondaryColor3usv = (_glSecondaryColor3usv)glXGetProcAddressARB((const GLubyte*)"glSecondaryColor3usv");
	bo_glSecondaryColor3uiv = (_glSecondaryColor3uiv)glXGetProcAddressARB((const GLubyte*)"glSecondaryColor3uiv");
	bo_glSecondaryColorPointer = (_glSecondaryColorPointer)glXGetProcAddressARB((const GLubyte*)"glSecondaryColorPointer");
	bo_glBlendFuncSeparate = (_glBlendFuncSeparate)glXGetProcAddressARB((const GLubyte*)"glBlendFuncSeparate");
	bo_glWindowPos2d = (_glWindowPos2d)glXGetProcAddressARB((const GLubyte*)"glWindowPos2d");
	bo_glWindowPos2f = (_glWindowPos2f)glXGetProcAddressARB((const GLubyte*)"glWindowPos2f");
	bo_glWindowPos2i = (_glWindowPos2i)glXGetProcAddressARB((const GLubyte*)"glWindowPos2i");
	bo_glWindowPos2s = (_glWindowPos2s)glXGetProcAddressARB((const GLubyte*)"glWindowPos2s");
	bo_glWindowPos2dv = (_glWindowPos2dv)glXGetProcAddressARB((const GLubyte*)"glWindowPos2dv");
	bo_glWindowPos2fv = (_glWindowPos2fv)glXGetProcAddressARB((const GLubyte*)"glWindowPos2fv");
	bo_glWindowPos2iv = (_glWindowPos2iv)glXGetProcAddressARB((const GLubyte*)"glWindowPos2iv");
	bo_glWindowPos2sv = (_glWindowPos2sv)glXGetProcAddressARB((const GLubyte*)"glWindowPos2sv");
	bo_glWindowPos3d = (_glWindowPos3d)glXGetProcAddressARB((const GLubyte*)"glWindowPos3d");
	bo_glWindowPos3f = (_glWindowPos3f)glXGetProcAddressARB((const GLubyte*)"glWindowPos3f");
	bo_glWindowPos3i = (_glWindowPos3i)glXGetProcAddressARB((const GLubyte*)"glWindowPos3i");
	bo_glWindowPos3s = (_glWindowPos3s)glXGetProcAddressARB((const GLubyte*)"glWindowPos3s");
	bo_glWindowPos3dv = (_glWindowPos3dv)glXGetProcAddressARB((const GLubyte*)"glWindowPos3dv");
	bo_glWindowPos3fv = (_glWindowPos3fv)glXGetProcAddressARB((const GLubyte*)"glWindowPos3fv");
	bo_glWindowPos3iv = (_glWindowPos3iv)glXGetProcAddressARB((const GLubyte*)"glWindowPos3iv");
	bo_glWindowPos3sv = (_glWindowPos3sv)glXGetProcAddressARB((const GLubyte*)"glWindowPos3sv");

	// from bogl_1_5_decl_p.boglc
	bo_glBindBuffer = (_glBindBuffer)glXGetProcAddressARB((const GLubyte*)"glBindBuffer");
	bo_glDeleteBuffers = (_glDeleteBuffers)glXGetProcAddressARB((const GLubyte*)"glDeleteBuffers");
	bo_glGenBuffers = (_glGenBuffers)glXGetProcAddressARB((const GLubyte*)"glGenBuffers");
	bo_glIsBuffer = (_glIsBuffer)glXGetProcAddressARB((const GLubyte*)"glIsBuffer");
	bo_glBufferData = (_glBufferData)glXGetProcAddressARB((const GLubyte*)"glBufferData");
	bo_glBufferSubData = (_glBufferSubData)glXGetProcAddressARB((const GLubyte*)"glBufferSubData");
	bo_glMapBuffer = (_glMapBuffer)glXGetProcAddressARB((const GLubyte*)"glMapBuffer");
	bo_glUnmapBuffer = (_glUnmapBuffer)glXGetProcAddressARB((const GLubyte*)"glUnmapBuffer");
	bo_glGetBufferParameteriv = (_glGetBufferParameteriv)glXGetProcAddressARB((const GLubyte*)"glGetBufferParameteriv");
	bo_glGetBufferPointerv = (_glGetBufferPointerv)glXGetProcAddressARB((const GLubyte*)"glGetBufferPointerv");
	bo_glGenQueries = (_glGenQueries)glXGetProcAddressARB((const GLubyte*)"glGenQueries");
	bo_glDeleteQueries = (_glDeleteQueries)glXGetProcAddressARB((const GLubyte*)"glDeleteQueries");
	bo_glIsQuery = (_glIsQuery)glXGetProcAddressARB((const GLubyte*)"glIsQuery");
	bo_glBeginQuery = (_glBeginQuery)glXGetProcAddressARB((const GLubyte*)"glBeginQuery");
	bo_glEndQuery = (_glEndQuery)glXGetProcAddressARB((const GLubyte*)"glEndQuery");
	bo_glGetQueryiv = (_glGetQueryiv)glXGetProcAddressARB((const GLubyte*)"glGetQueryiv");
	bo_glGetQueryObjectiv = (_glGetQueryObjectiv)glXGetProcAddressARB((const GLubyte*)"glGetQueryObjectiv");
	bo_glGetQueryObjectuiv = (_glGetQueryObjectuiv)glXGetProcAddressARB((const GLubyte*)"glGetQueryObjectuiv");

	// from bogl_2_0_decl_p.boglc
	bo_glDrawBuffers = (_glDrawBuffers)glXGetProcAddressARB((const GLubyte*)"glDrawBuffers");
	bo_glStencilOpSeparate = (_glStencilOpSeparate)glXGetProcAddressARB((const GLubyte*)"glStencilOpSeparate");
	bo_glStencilFuncSeparate = (_glStencilFuncSeparate)glXGetProcAddressARB((const GLubyte*)"glStencilFuncSeparate");
	bo_glIsShader = (_glIsShader)glXGetProcAddressARB((const GLubyte*)"glIsShader");
	bo_glIsProgram = (_glIsProgram)glXGetProcAddressARB((const GLubyte*)"glIsProgram");
	bo_glGetAttachedShaders = (_glGetAttachedShaders)glXGetProcAddressARB((const GLubyte*)"glGetAttachedShaders");
	bo_glCreateShader = (_glCreateShader)glXGetProcAddressARB((const GLubyte*)"glCreateShader");
	bo_glShaderSource = (_glShaderSource)glXGetProcAddressARB((const GLubyte*)"glShaderSource");
	bo_glCompileShader = (_glCompileShader)glXGetProcAddressARB((const GLubyte*)"glCompileShader");
	bo_glDeleteShader = (_glDeleteShader)glXGetProcAddressARB((const GLubyte*)"glDeleteShader");
	bo_glCreateProgram = (_glCreateProgram)glXGetProcAddressARB((const GLubyte*)"glCreateProgram");
	bo_glAttachShader = (_glAttachShader)glXGetProcAddressARB((const GLubyte*)"glAttachShader");
	bo_glDetachShader = (_glDetachShader)glXGetProcAddressARB((const GLubyte*)"glDetachShader");
	bo_glLinkProgram = (_glLinkProgram)glXGetProcAddressARB((const GLubyte*)"glLinkProgram");
	bo_glUseProgram = (_glUseProgram)glXGetProcAddressARB((const GLubyte*)"glUseProgram");
	bo_glDeleteProgram = (_glDeleteProgram)glXGetProcAddressARB((const GLubyte*)"glDeleteProgram");
	bo_glGetShaderInfoLog = (_glGetShaderInfoLog)glXGetProcAddressARB((const GLubyte*)"glGetShaderInfoLog");
	bo_glGetProgramInfoLog = (_glGetProgramInfoLog)glXGetProcAddressARB((const GLubyte*)"glGetProgramInfoLog");
	bo_glGetShaderSource = (_glGetShaderSource)glXGetProcAddressARB((const GLubyte*)"glGetShaderSource");
	bo_glGetUniformfv = (_glGetUniformfv)glXGetProcAddressARB((const GLubyte*)"glGetUniformfv");
	bo_glGetUniformiv = (_glGetUniformiv)glXGetProcAddressARB((const GLubyte*)"glGetUniformiv");
	bo_glGetProgramiv = (_glGetProgramiv)glXGetProcAddressARB((const GLubyte*)"glGetProgramiv");
	bo_glGetShaderiv = (_glGetShaderiv)glXGetProcAddressARB((const GLubyte*)"glGetShaderiv");
	bo_glUniform1f = (_glUniform1f)glXGetProcAddressARB((const GLubyte*)"glUniform1f");
	bo_glUniform2f = (_glUniform2f)glXGetProcAddressARB((const GLubyte*)"glUniform2f");
	bo_glUniform3f = (_glUniform3f)glXGetProcAddressARB((const GLubyte*)"glUniform3f");
	bo_glUniform4f = (_glUniform4f)glXGetProcAddressARB((const GLubyte*)"glUniform4f");
	bo_glUniform1i = (_glUniform1i)glXGetProcAddressARB((const GLubyte*)"glUniform1i");
	bo_glUniform2i = (_glUniform2i)glXGetProcAddressARB((const GLubyte*)"glUniform2i");
	bo_glUniform3i = (_glUniform3i)glXGetProcAddressARB((const GLubyte*)"glUniform3i");
	bo_glUniform4i = (_glUniform4i)glXGetProcAddressARB((const GLubyte*)"glUniform4i");
	bo_glUniform1fv = (_glUniform1fv)glXGetProcAddressARB((const GLubyte*)"glUniform1fv");
	bo_glUniform2fv = (_glUniform2fv)glXGetProcAddressARB((const GLubyte*)"glUniform2fv");
	bo_glUniform3fv = (_glUniform3fv)glXGetProcAddressARB((const GLubyte*)"glUniform3fv");
	bo_glUniform4fv = (_glUniform4fv)glXGetProcAddressARB((const GLubyte*)"glUniform4fv");
	bo_glUniform1iv = (_glUniform1iv)glXGetProcAddressARB((const GLubyte*)"glUniform1iv");
	bo_glUniform2iv = (_glUniform2iv)glXGetProcAddressARB((const GLubyte*)"glUniform2iv");
	bo_glUniform3iv = (_glUniform3iv)glXGetProcAddressARB((const GLubyte*)"glUniform3iv");
	bo_glUniform4iv = (_glUniform4iv)glXGetProcAddressARB((const GLubyte*)"glUniform4iv");
	bo_glUniformMatrix2fv = (_glUniformMatrix2fv)glXGetProcAddressARB((const GLubyte*)"glUniformMatrix2fv");
	bo_glUniformMatrix3fv = (_glUniformMatrix3fv)glXGetProcAddressARB((const GLubyte*)"glUniformMatrix3fv");
	bo_glUniformMatrix4fv = (_glUniformMatrix4fv)glXGetProcAddressARB((const GLubyte*)"glUniformMatrix4fv");
	bo_glValidateProgram = (_glValidateProgram)glXGetProcAddressARB((const GLubyte*)"glValidateProgram");
	bo_glGetUniformLocation = (_glGetUniformLocation)glXGetProcAddressARB((const GLubyte*)"glGetUniformLocation");
	bo_glGetActiveUniform = (_glGetActiveUniform)glXGetProcAddressARB((const GLubyte*)"glGetActiveUniform");
	bo_glVertexAttrib1s = (_glVertexAttrib1s)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib1s");
	bo_glVertexAttrib1f = (_glVertexAttrib1f)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib1f");
	bo_glVertexAttrib1d = (_glVertexAttrib1d)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib1d");
	bo_glVertexAttrib2s = (_glVertexAttrib2s)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib2s");
	bo_glVertexAttrib2f = (_glVertexAttrib2f)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib2f");
	bo_glVertexAttrib2d = (_glVertexAttrib2d)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib2d");
	bo_glVertexAttrib3s = (_glVertexAttrib3s)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib3s");
	bo_glVertexAttrib3f = (_glVertexAttrib3f)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib3f");
	bo_glVertexAttrib3d = (_glVertexAttrib3d)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib3d");
	bo_glVertexAttrib4s = (_glVertexAttrib4s)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4s");
	bo_glVertexAttrib4f = (_glVertexAttrib4f)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4f");
	bo_glVertexAttrib4d = (_glVertexAttrib4d)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4d");
	bo_glVertexAttrib1sv = (_glVertexAttrib1sv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib1sv");
	bo_glVertexAttrib1fv = (_glVertexAttrib1fv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib1fv");
	bo_glVertexAttrib1dv = (_glVertexAttrib1dv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib1dv");
	bo_glVertexAttrib2sv = (_glVertexAttrib2sv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib2sv");
	bo_glVertexAttrib2fv = (_glVertexAttrib2fv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib2fv");
	bo_glVertexAttrib2dv = (_glVertexAttrib2dv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib2dv");
	bo_glVertexAttrib3sv = (_glVertexAttrib3sv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib3sv");
	bo_glVertexAttrib3fv = (_glVertexAttrib3fv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib3fv");
	bo_glVertexAttrib3dv = (_glVertexAttrib3dv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib3dv");
	bo_glVertexAttrib4sv = (_glVertexAttrib4sv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4sv");
	bo_glVertexAttrib4fv = (_glVertexAttrib4fv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4fv");
	bo_glVertexAttrib4dv = (_glVertexAttrib4dv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4dv");
	bo_glVertexAttrib4bv = (_glVertexAttrib4bv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4bv");
	bo_glVertexAttrib4iv = (_glVertexAttrib4iv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4iv");
	bo_glVertexAttrib4ubv = (_glVertexAttrib4ubv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4ubv");
	bo_glVertexAttrib4usv = (_glVertexAttrib4usv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4usv");
	bo_glVertexAttrib4uiv = (_glVertexAttrib4uiv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4uiv");
	bo_glVertexAttrib4Nub = (_glVertexAttrib4Nub)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4Nub");
	bo_glVertexAttrib4Nbv = (_glVertexAttrib4Nbv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4Nbv");
	bo_glVertexAttrib4Nsv = (_glVertexAttrib4Nsv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4Nsv");
	bo_glVertexAttrib4Niv = (_glVertexAttrib4Niv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4Niv");
	bo_glVertexAttrib4Nubv = (_glVertexAttrib4Nubv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4Nubv");
	bo_glVertexAttrib4Nusv = (_glVertexAttrib4Nusv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4Nusv");
	bo_glVertexAttrib4Nuiv = (_glVertexAttrib4Nuiv)glXGetProcAddressARB((const GLubyte*)"glVertexAttrib4Nuiv");
	bo_glVertexAttribPointer = (_glVertexAttribPointer)glXGetProcAddressARB((const GLubyte*)"glVertexAttribPointer");
	bo_glEnableVertexAttribArray = (_glEnableVertexAttribArray)glXGetProcAddressARB((const GLubyte*)"glEnableVertexAttribArray");
	bo_glDisableVertexAttribArray = (_glDisableVertexAttribArray)glXGetProcAddressARB((const GLubyte*)"glDisableVertexAttribArray");
	bo_glBindAttribLocation = (_glBindAttribLocation)glXGetProcAddressARB((const GLubyte*)"glBindAttribLocation");
	bo_glGetActiveAttrib = (_glGetActiveAttrib)glXGetProcAddressARB((const GLubyte*)"glGetActiveAttrib");
	bo_glGetAttribLocation = (_glGetAttribLocation)glXGetProcAddressARB((const GLubyte*)"glGetAttribLocation");
	bo_glGetVertexAttribdv = (_glGetVertexAttribdv)glXGetProcAddressARB((const GLubyte*)"glGetVertexAttribdv");
	bo_glGetVertexAttribfv = (_glGetVertexAttribfv)glXGetProcAddressARB((const GLubyte*)"glGetVertexAttribfv");
	bo_glGetVertexAttribiv = (_glGetVertexAttribiv)glXGetProcAddressARB((const GLubyte*)"glGetVertexAttribiv");
	bo_glGetVertexAttribPointerv = (_glGetVertexAttribPointerv)glXGetProcAddressARB((const GLubyte*)"glGetVertexAttribPointerv");
	bo_glBlendEquationSeparate = (_glBlendEquationSeparate)glXGetProcAddressARB((const GLubyte*)"glBlendEquationSeparate");

	// from arb_multitexture_decl_p.boglc
	bo_glMultiTexCoord1dARB = (_glMultiTexCoord1dARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord1dARB");
	bo_glMultiTexCoord1dvARB = (_glMultiTexCoord1dvARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord1dvARB");
	bo_glMultiTexCoord1fARB = (_glMultiTexCoord1fARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord1fARB");
	bo_glMultiTexCoord1fvARB = (_glMultiTexCoord1fvARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord1fvARB");
	bo_glMultiTexCoord1iARB = (_glMultiTexCoord1iARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord1iARB");
	bo_glMultiTexCoord1ivARB = (_glMultiTexCoord1ivARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord1ivARB");
	bo_glMultiTexCoord1sARB = (_glMultiTexCoord1sARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord1sARB");
	bo_glMultiTexCoord1svARB = (_glMultiTexCoord1svARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord1svARB");
	bo_glMultiTexCoord2dARB = (_glMultiTexCoord2dARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord2dARB");
	bo_glMultiTexCoord2dvARB = (_glMultiTexCoord2dvARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord2dvARB");
	bo_glMultiTexCoord2fARB = (_glMultiTexCoord2fARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord2fARB");
	bo_glMultiTexCoord2fvARB = (_glMultiTexCoord2fvARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord2fvARB");
	bo_glMultiTexCoord2iARB = (_glMultiTexCoord2iARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord2iARB");
	bo_glMultiTexCoord2ivARB = (_glMultiTexCoord2ivARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord2ivARB");
	bo_glMultiTexCoord2sARB = (_glMultiTexCoord2sARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord2sARB");
	bo_glMultiTexCoord2svARB = (_glMultiTexCoord2svARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord2svARB");
	bo_glMultiTexCoord3dARB = (_glMultiTexCoord3dARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord3dARB");
	bo_glMultiTexCoord3dvARB = (_glMultiTexCoord3dvARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord3dvARB");
	bo_glMultiTexCoord3fARB = (_glMultiTexCoord3fARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord3fARB");
	bo_glMultiTexCoord3fvARB = (_glMultiTexCoord3fvARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord3fvARB");
	bo_glMultiTexCoord3iARB = (_glMultiTexCoord3iARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord3iARB");
	bo_glMultiTexCoord3ivARB = (_glMultiTexCoord3ivARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord3ivARB");
	bo_glMultiTexCoord3sARB = (_glMultiTexCoord3sARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord3sARB");
	bo_glMultiTexCoord3svARB = (_glMultiTexCoord3svARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord3svARB");
	bo_glMultiTexCoord4dARB = (_glMultiTexCoord4dARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord4dARB");
	bo_glMultiTexCoord4dvARB = (_glMultiTexCoord4dvARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord4dvARB");
	bo_glMultiTexCoord4fARB = (_glMultiTexCoord4fARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord4fARB");
	bo_glMultiTexCoord4fvARB = (_glMultiTexCoord4fvARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord4fvARB");
	bo_glMultiTexCoord4iARB = (_glMultiTexCoord4iARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord4iARB");
	bo_glMultiTexCoord4ivARB = (_glMultiTexCoord4ivARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord4ivARB");
	bo_glMultiTexCoord4sARB = (_glMultiTexCoord4sARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord4sARB");
	bo_glMultiTexCoord4svARB = (_glMultiTexCoord4svARB)glXGetProcAddressARB((const GLubyte*)"glMultiTexCoord4svARB");
	bo_glClientActiveTextureARB = (_glClientActiveTextureARB)glXGetProcAddressARB((const GLubyte*)"glClientActiveTextureARB");
	bo_glActiveTextureARB = (_glActiveTextureARB)glXGetProcAddressARB((const GLubyte*)"glActiveTextureARB");

	// from arb_shader_objects_decl_p.boglc
	bo_glDeleteObjectARB = (_glDeleteObjectARB)glXGetProcAddressARB((const GLubyte*)"glDeleteObjectARB");
	bo_glGetHandleARB = (_glGetHandleARB)glXGetProcAddressARB((const GLubyte*)"glGetHandleARB");
	bo_glDetachObjectARB = (_glDetachObjectARB)glXGetProcAddressARB((const GLubyte*)"glDetachObjectARB");
	bo_glCreateShaderObjectARB = (_glCreateShaderObjectARB)glXGetProcAddressARB((const GLubyte*)"glCreateShaderObjectARB");
	bo_glShaderSourceARB = (_glShaderSourceARB)glXGetProcAddressARB((const GLubyte*)"glShaderSourceARB");
	bo_glCompileShaderARB = (_glCompileShaderARB)glXGetProcAddressARB((const GLubyte*)"glCompileShaderARB");
	bo_glCreateProgramObjectARB = (_glCreateProgramObjectARB)glXGetProcAddressARB((const GLubyte*)"glCreateProgramObjectARB");
	bo_glAttachObjectARB = (_glAttachObjectARB)glXGetProcAddressARB((const GLubyte*)"glAttachObjectARB");
	bo_glLinkProgramARB = (_glLinkProgramARB)glXGetProcAddressARB((const GLubyte*)"glLinkProgramARB");
	bo_glUseProgramObjectARB = (_glUseProgramObjectARB)glXGetProcAddressARB((const GLubyte*)"glUseProgramObjectARB");
	bo_glValidateProgramARB = (_glValidateProgramARB)glXGetProcAddressARB((const GLubyte*)"glValidateProgramARB");
	bo_glUniform1fARB = (_glUniform1fARB)glXGetProcAddressARB((const GLubyte*)"glUniform1fARB");
	bo_glUniform2fARB = (_glUniform2fARB)glXGetProcAddressARB((const GLubyte*)"glUniform2fARB");
	bo_glUniform3fARB = (_glUniform3fARB)glXGetProcAddressARB((const GLubyte*)"glUniform3fARB");
	bo_glUniform4fARB = (_glUniform4fARB)glXGetProcAddressARB((const GLubyte*)"glUniform4fARB");
	bo_glUniform1iARB = (_glUniform1iARB)glXGetProcAddressARB((const GLubyte*)"glUniform1iARB");
	bo_glUniform2iARB = (_glUniform2iARB)glXGetProcAddressARB((const GLubyte*)"glUniform2iARB");
	bo_glUniform3iARB = (_glUniform3iARB)glXGetProcAddressARB((const GLubyte*)"glUniform3iARB");
	bo_glUniform4iARB = (_glUniform4iARB)glXGetProcAddressARB((const GLubyte*)"glUniform4iARB");
	bo_glUniform1fvARB = (_glUniform1fvARB)glXGetProcAddressARB((const GLubyte*)"glUniform1fvARB");
	bo_glUniform2fvARB = (_glUniform2fvARB)glXGetProcAddressARB((const GLubyte*)"glUniform2fvARB");
	bo_glUniform3fvARB = (_glUniform3fvARB)glXGetProcAddressARB((const GLubyte*)"glUniform3fvARB");
	bo_glUniform4fvARB = (_glUniform4fvARB)glXGetProcAddressARB((const GLubyte*)"glUniform4fvARB");
	bo_glUniform1ivARB = (_glUniform1ivARB)glXGetProcAddressARB((const GLubyte*)"glUniform1ivARB");
	bo_glUniform2ivARB = (_glUniform2ivARB)glXGetProcAddressARB((const GLubyte*)"glUniform2ivARB");
	bo_glUniform3ivARB = (_glUniform3ivARB)glXGetProcAddressARB((const GLubyte*)"glUniform3ivARB");
	bo_glUniform4ivARB = (_glUniform4ivARB)glXGetProcAddressARB((const GLubyte*)"glUniform4ivARB");
	bo_glUniformMatrix2fvARB = (_glUniformMatrix2fvARB)glXGetProcAddressARB((const GLubyte*)"glUniformMatrix2fvARB");
	bo_glUniformMatrix3fvARB = (_glUniformMatrix3fvARB)glXGetProcAddressARB((const GLubyte*)"glUniformMatrix3fvARB");
	bo_glUniformMatrix4fvARB = (_glUniformMatrix4fvARB)glXGetProcAddressARB((const GLubyte*)"glUniformMatrix4fvARB");
	bo_glGetObjectParameterfvARB = (_glGetObjectParameterfvARB)glXGetProcAddressARB((const GLubyte*)"glGetObjectParameterfvARB");
	bo_glGetObjectParameterivARB = (_glGetObjectParameterivARB)glXGetProcAddressARB((const GLubyte*)"glGetObjectParameterivARB");
	bo_glGetInfoLogARB = (_glGetInfoLogARB)glXGetProcAddressARB((const GLubyte*)"glGetInfoLogARB");
	bo_glGetAttachedObjectsARB = (_glGetAttachedObjectsARB)glXGetProcAddressARB((const GLubyte*)"glGetAttachedObjectsARB");
	bo_glGetUniformLocationARB = (_glGetUniformLocationARB)glXGetProcAddressARB((const GLubyte*)"glGetUniformLocationARB");
	bo_glGetActiveUniformARB = (_glGetActiveUniformARB)glXGetProcAddressARB((const GLubyte*)"glGetActiveUniformARB");
	bo_glGetUniformfvARB = (_glGetUniformfvARB)glXGetProcAddressARB((const GLubyte*)"glGetUniformfvARB");
	bo_glGetUniformivARB = (_glGetUniformivARB)glXGetProcAddressARB((const GLubyte*)"glGetUniformivARB");
	bo_glGetShaderSourceARB = (_glGetShaderSourceARB)glXGetProcAddressARB((const GLubyte*)"glGetShaderSourceARB");

	// from arb_vertex_buffer_object_decl_p.boglc
	bo_glBindBufferARB = (_glBindBufferARB)glXGetProcAddressARB((const GLubyte*)"glBindBufferARB");
	bo_glDeleteBuffersARB = (_glDeleteBuffersARB)glXGetProcAddressARB((const GLubyte*)"glDeleteBuffersARB");
	bo_glGenBuffersARB = (_glGenBuffersARB)glXGetProcAddressARB((const GLubyte*)"glGenBuffersARB");
	bo_glIsBufferARB = (_glIsBufferARB)glXGetProcAddressARB((const GLubyte*)"glIsBufferARB");
	bo_glBufferDataARB = (_glBufferDataARB)glXGetProcAddressARB((const GLubyte*)"glBufferDataARB");
	bo_glBufferSubDataARB = (_glBufferSubDataARB)glXGetProcAddressARB((const GLubyte*)"glBufferSubDataARB");
	bo_glMapBufferARB = (_glMapBufferARB)glXGetProcAddressARB((const GLubyte*)"glMapBufferARB");
	bo_glUnmapBufferARB = (_glUnmapBufferARB)glXGetProcAddressARB((const GLubyte*)"glUnmapBufferARB");
	bo_glGetBufferParameterivARB = (_glGetBufferParameterivARB)glXGetProcAddressARB((const GLubyte*)"glGetBufferParameterivARB");
	bo_glGetBufferPointervARB = (_glGetBufferPointervARB)glXGetProcAddressARB((const GLubyte*)"glGetBufferPointervARB");

	// from ext_blend_color_decl_p.boglc
	bo_glBlendColorEXT = (_glBlendColorEXT)glXGetProcAddressARB((const GLubyte*)"glBlendColorEXT");

	// from ext_framebuffer_object_decl_p.boglc
	bo_glIsRenderbufferEXT = (_glIsRenderbufferEXT)glXGetProcAddressARB((const GLubyte*)"glIsRenderbufferEXT");
	bo_glBindRenderbufferEXT = (_glBindRenderbufferEXT)glXGetProcAddressARB((const GLubyte*)"glBindRenderbufferEXT");
	bo_glDeleteRenderbuffersEXT = (_glDeleteRenderbuffersEXT)glXGetProcAddressARB((const GLubyte*)"glDeleteRenderbuffersEXT");
	bo_glGenRenderbuffersEXT = (_glGenRenderbuffersEXT)glXGetProcAddressARB((const GLubyte*)"glGenRenderbuffersEXT");
	bo_glRenderbufferStorageEXT = (_glRenderbufferStorageEXT)glXGetProcAddressARB((const GLubyte*)"glRenderbufferStorageEXT");
	bo_glGetRenderbufferParameterivEXT = (_glGetRenderbufferParameterivEXT)glXGetProcAddressARB((const GLubyte*)"glGetRenderbufferParameterivEXT");
	bo_glIsFramebufferEXT = (_glIsFramebufferEXT)glXGetProcAddressARB((const GLubyte*)"glIsFramebufferEXT");
	bo_glBindFramebufferEXT = (_glBindFramebufferEXT)glXGetProcAddressARB((const GLubyte*)"glBindFramebufferEXT");
	bo_glDeleteFramebuffersEXT = (_glDeleteFramebuffersEXT)glXGetProcAddressARB((const GLubyte*)"glDeleteFramebuffersEXT");
	bo_glGenFramebuffersEXT = (_glGenFramebuffersEXT)glXGetProcAddressARB((const GLubyte*)"glGenFramebuffersEXT");
	bo_glCheckFramebufferStatusEXT = (_glCheckFramebufferStatusEXT)glXGetProcAddressARB((const GLubyte*)"glCheckFramebufferStatusEXT");
	bo_glFramebufferTexture1DEXT = (_glFramebufferTexture1DEXT)glXGetProcAddressARB((const GLubyte*)"glFramebufferTexture1DEXT");
	bo_glFramebufferTexture2DEXT = (_glFramebufferTexture2DEXT)glXGetProcAddressARB((const GLubyte*)"glFramebufferTexture2DEXT");
	bo_glFramebufferTexture3DEXT = (_glFramebufferTexture3DEXT)glXGetProcAddressARB((const GLubyte*)"glFramebufferTexture3DEXT");
	bo_glFramebufferRenderbufferEXT = (_glFramebufferRenderbufferEXT)glXGetProcAddressARB((const GLubyte*)"glFramebufferRenderbufferEXT");
	bo_glGetFramebufferAttachmentParameterivEXT = (_glGetFramebufferAttachmentParameterivEXT)glXGetProcAddressARB((const GLubyte*)"glGetFramebufferAttachmentParameterivEXT");
	bo_glGenerateMipmapEXT = (_glGenerateMipmapEXT)glXGetProcAddressARB((const GLubyte*)"glGenerateMipmapEXT");

	// from ext_polygon_offset_decl_p.boglc
	bo_glPolygonOffsetEXT = (_glPolygonOffsetEXT)glXGetProcAddressARB((const GLubyte*)"glPolygonOffsetEXT");

	// from ext_texture3d_decl_p.boglc
	bo_glTexImage3DEXT = (_glTexImage3DEXT)glXGetProcAddressARB((const GLubyte*)"glTexImage3DEXT");
	bo_glTexSubImage3DEXT = (_glTexSubImage3DEXT)glXGetProcAddressARB((const GLubyte*)"glTexSubImage3DEXT");
	bo_glCopyTexSubImage3DEXT = (_glCopyTexSubImage3DEXT)glXGetProcAddressARB((const GLubyte*)"glCopyTexSubImage3DEXT");

	// from boglx_decl_p.boglc
	bo_glXChooseVisual = (_glXChooseVisual)glXGetProcAddressARB((const GLubyte*)"glXChooseVisual");
	bo_glXCopyContext = (_glXCopyContext)glXGetProcAddressARB((const GLubyte*)"glXCopyContext");
	bo_glXCreateContext = (_glXCreateContext)glXGetProcAddressARB((const GLubyte*)"glXCreateContext");
	bo_glXCreateGLXPixmap = (_glXCreateGLXPixmap)glXGetProcAddressARB((const GLubyte*)"glXCreateGLXPixmap");
	bo_glXDestroyContext = (_glXDestroyContext)glXGetProcAddressARB((const GLubyte*)"glXDestroyContext");
	bo_glXDestroyGLXPixmap = (_glXDestroyGLXPixmap)glXGetProcAddressARB((const GLubyte*)"glXDestroyGLXPixmap");
	bo_glXGetConfig = (_glXGetConfig)glXGetProcAddressARB((const GLubyte*)"glXGetConfig");
	bo_glXGetCurrentContext = (_glXGetCurrentContext)glXGetProcAddressARB((const GLubyte*)"glXGetCurrentContext");
	bo_glXGetCurrentDrawable = (_glXGetCurrentDrawable)glXGetProcAddressARB((const GLubyte*)"glXGetCurrentDrawable");
	bo_glXIsDirect = (_glXIsDirect)glXGetProcAddressARB((const GLubyte*)"glXIsDirect");
	bo_glXMakeCurrent = (_glXMakeCurrent)glXGetProcAddressARB((const GLubyte*)"glXMakeCurrent");
	bo_glXQueryExtension = (_glXQueryExtension)glXGetProcAddressARB((const GLubyte*)"glXQueryExtension");
	bo_glXQueryVersion = (_glXQueryVersion)glXGetProcAddressARB((const GLubyte*)"glXQueryVersion");
	bo_glXSwapBuffers = (_glXSwapBuffers)glXGetProcAddressARB((const GLubyte*)"glXSwapBuffers");
	bo_glXUseXFont = (_glXUseXFont)glXGetProcAddressARB((const GLubyte*)"glXUseXFont");
	bo_glXWaitGL = (_glXWaitGL)glXGetProcAddressARB((const GLubyte*)"glXWaitGL");
	bo_glXWaitX = (_glXWaitX)glXGetProcAddressARB((const GLubyte*)"glXWaitX");
	bo_glXGetClientString = (_glXGetClientString)glXGetProcAddressARB((const GLubyte*)"glXGetClientString");
	bo_glXQueryServerString = (_glXQueryServerString)glXGetProcAddressARB((const GLubyte*)"glXQueryServerString");
	bo_glXQueryExtensionsString = (_glXQueryExtensionsString)glXGetProcAddressARB((const GLubyte*)"glXQueryExtensionsString");
	bo_glXGetFBConfigs = (_glXGetFBConfigs)glXGetProcAddressARB((const GLubyte*)"glXGetFBConfigs");
	bo_glXChooseFBConfig = (_glXChooseFBConfig)glXGetProcAddressARB((const GLubyte*)"glXChooseFBConfig");
	bo_glXGetFBConfigAttrib = (_glXGetFBConfigAttrib)glXGetProcAddressARB((const GLubyte*)"glXGetFBConfigAttrib");
	bo_glXGetVisualFromFBConfig = (_glXGetVisualFromFBConfig)glXGetProcAddressARB((const GLubyte*)"glXGetVisualFromFBConfig");
	bo_glXCreateWindow = (_glXCreateWindow)glXGetProcAddressARB((const GLubyte*)"glXCreateWindow");
	bo_glXDestroyWindow = (_glXDestroyWindow)glXGetProcAddressARB((const GLubyte*)"glXDestroyWindow");
	bo_glXCreatePixmap = (_glXCreatePixmap)glXGetProcAddressARB((const GLubyte*)"glXCreatePixmap");
	bo_glXDestroyPixmap = (_glXDestroyPixmap)glXGetProcAddressARB((const GLubyte*)"glXDestroyPixmap");
	bo_glXCreatePbuffer = (_glXCreatePbuffer)glXGetProcAddressARB((const GLubyte*)"glXCreatePbuffer");
	bo_glXDestroyPbuffer = (_glXDestroyPbuffer)glXGetProcAddressARB((const GLubyte*)"glXDestroyPbuffer");
	bo_glXQueryDrawable = (_glXQueryDrawable)glXGetProcAddressARB((const GLubyte*)"glXQueryDrawable");
	bo_glXCreateNewContext = (_glXCreateNewContext)glXGetProcAddressARB((const GLubyte*)"glXCreateNewContext");
	bo_glXMakeContextCurrent = (_glXMakeContextCurrent)glXGetProcAddressARB((const GLubyte*)"glXMakeContextCurrent");
	bo_glXGetCurrentReadDrawable = (_glXGetCurrentReadDrawable)glXGetProcAddressARB((const GLubyte*)"glXGetCurrentReadDrawable");
	bo_glXGetCurrentDisplay = (_glXGetCurrentDisplay)glXGetProcAddressARB((const GLubyte*)"glXGetCurrentDisplay");
	bo_glXQueryContext = (_glXQueryContext)glXGetProcAddressARB((const GLubyte*)"glXQueryContext");
	bo_glXSelectEvent = (_glXSelectEvent)glXGetProcAddressARB((const GLubyte*)"glXSelectEvent");
	bo_glXGetSelectedEvent = (_glXGetSelectedEvent)glXGetProcAddressARB((const GLubyte*)"glXGetSelectedEvent");
	bo_glXGetProcAddress = (_glXGetProcAddress)glXGetProcAddressARB((const GLubyte*)"glXGetProcAddress");
	bo_glXGetContextIDEXT = (_glXGetContextIDEXT)glXGetProcAddressARB((const GLubyte*)"glXGetContextIDEXT");
	bo_glXImportContextEXT = (_glXImportContextEXT)glXGetProcAddressARB((const GLubyte*)"glXImportContextEXT");
	bo_glXFreeContextEXT = (_glXFreeContextEXT)glXGetProcAddressARB((const GLubyte*)"glXFreeContextEXT");
	bo_glXQueryContextInfoEXT = (_glXQueryContextInfoEXT)glXGetProcAddressARB((const GLubyte*)"glXQueryContextInfoEXT");
	bo_glXGetCurrentDisplayEXT = (_glXGetCurrentDisplayEXT)glXGetProcAddressARB((const GLubyte*)"glXGetCurrentDisplayEXT");
	bo_glXGetProcAddressARB = (_glXGetProcAddressARB)glXGetProcAddressARB((const GLubyte*)"glXGetProcAddressARB");
	bo_glXAllocateMemoryNV = (_glXAllocateMemoryNV)glXGetProcAddressARB((const GLubyte*)"glXAllocateMemoryNV");
	bo_glXFreeMemoryNV = (_glXFreeMemoryNV)glXGetProcAddressARB((const GLubyte*)"glXFreeMemoryNV");
	bo_glXGetAGPOffsetMESA = (_glXGetAGPOffsetMESA)glXGetProcAddressARB((const GLubyte*)"glXGetAGPOffsetMESA");
	bo_glXGetFBConfigAttribSGIX = (_glXGetFBConfigAttribSGIX)glXGetProcAddressARB((const GLubyte*)"glXGetFBConfigAttribSGIX");
	bo_glXChooseFBConfigSGIX = (_glXChooseFBConfigSGIX)glXGetProcAddressARB((const GLubyte*)"glXChooseFBConfigSGIX");
	bo_glXCreateGLXPixmapWithConfigSGIX = (_glXCreateGLXPixmapWithConfigSGIX)glXGetProcAddressARB((const GLubyte*)"glXCreateGLXPixmapWithConfigSGIX");
	bo_glXCreateContextWithConfigSGIX = (_glXCreateContextWithConfigSGIX)glXGetProcAddressARB((const GLubyte*)"glXCreateContextWithConfigSGIX");
	bo_glXGetVisualFromFBConfigSGIX = (_glXGetVisualFromFBConfigSGIX)glXGetProcAddressARB((const GLubyte*)"glXGetVisualFromFBConfigSGIX");
	bo_glXGetFBConfigFromVisualSGIX = (_glXGetFBConfigFromVisualSGIX)glXGetProcAddressARB((const GLubyte*)"glXGetFBConfigFromVisualSGIX");
	bo_glXCreateGLXPbufferSGIX = (_glXCreateGLXPbufferSGIX)glXGetProcAddressARB((const GLubyte*)"glXCreateGLXPbufferSGIX");
	bo_glXDestroyGLXPbufferSGIX = (_glXDestroyGLXPbufferSGIX)glXGetProcAddressARB((const GLubyte*)"glXDestroyGLXPbufferSGIX");
	bo_glXQueryGLXPbufferSGIX = (_glXQueryGLXPbufferSGIX)glXGetProcAddressARB((const GLubyte*)"glXQueryGLXPbufferSGIX");
	bo_glXSelectEventSGIX = (_glXSelectEventSGIX)glXGetProcAddressARB((const GLubyte*)"glXSelectEventSGIX");
	bo_glXGetSelectedEventSGIX = (_glXGetSelectedEventSGIX)glXGetProcAddressARB((const GLubyte*)"glXGetSelectedEventSGIX");

	return true;
}

