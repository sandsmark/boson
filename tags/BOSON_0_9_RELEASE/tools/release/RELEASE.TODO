Remember to update/check before releasing:
------------------------------------------
- change version number:
  - code/configure.in.in
  - data/configure.in.in
  - main.cpp,bounitmain.cpp,bocursormain.cpp,boprofilingmain.cpp,borendermain.cpp,bouniteditor.ui
  - *.cpp *.h --> grep 
  - code/ChangeLog: echo "version foobar has been released on ..."
  - boversion.h: BOSON_VERSION_STRING and BOSON_VERSION_[MINOR|MICRO]
- code/boson/data/boson.lsm: Version, Entered-Date, Primary-site, Alternate-site, maybe. Keywords and Platform
- website: news, download.html
- <package>/REAMDE -> installation instructions for packages differ from the
  instructions for cvs
- ensure that *no* .o files are in the release package
- test on gcc3.2 AND gcc2.95 --> we do not support gcc3.0.x (KDE doesn't either)
- ensure that *if* there are CVS dirs they *only* include anonymous access - if
  not then the package shouldn't have .cvsignore files either
- remember that the lsm file (for ftp servers) and the ChangeLog both include
  the release-date!
- release ONLY from a cvs RELEASE tag! i.e. cvs up -r BOSON_0_6_1_RELEASE for
  0.6.1 release. You can tag the release using cvs -q tag BOSON_0_6_1_RELEASE
  (remember that you need to do a cvs up -r BOSON_0_6_1_RELEASE after doing so)
  --> you can move the tag with the same command, following a specific file.


Special notes about the -music package:
- remember that it needs all the configure stuff just like the data package
- probably look into the 0.6 package and do it exactly the same way as we've
  done there
- release this package *only* if it actually changed



Release Instructions:
---------------------
 mkdir release ; cd release
 cvs co -d:pserver:anonymous@cvs.boson.sourceforge.net:/cvsroot/boson -r BOSON_x_y_RELEASE code
 cvs co -d:pserver:anonymous@cvs.boson.sourceforge.net:/cvsroot/boson -r BOSON_x_y_RELEASE data
# where x and y are the version number (e.g. BOSON_0_7_RELEASE)
 mkdir music ; cd music
 wget http://boson.sf.net/music/foobar.tar.bz2   
# where foobar are the music files
 cd ..

Now you should have code and data (cleanly!) from anonymous cvs and a dir music
with .tar.bz2 files containing music.
You should now edit release/dist from the "tools" module in cvs and start it in
the current (release) directory.

This should create the necessary packages (i.e. the .tar.bz2 files) which should
get uploaded.


Upload:
-------
- code,data,music (separate .tar.bz2 packages)
- code+data+music (single .tar.bz2 package)
- .lsm (some ftp sites require this)

Upload to:
----------
- sf.net file release --> do not upload to boson.eu.org but use the file release
  as primary instead
- ftp.kde.org (lsm!) -> see ftp.upload.kde.org/[00NAMES|00LSM.README]

Make Announcements (major releases):
------------------------------------
- boson-devel@lists.sf.net
- kde-games-devel@mail.kde.org
- sf.net project news
- freshmeat
- freehackers.org
- kdenews.unixcode.org
- kde-announce@mail.kde.org
- games.kde.org
- linuxgames.com
- holarse.de
- happypenguins.org
- do NOT announce on dot.kde.org (they wait a long time and then post a quicky
  only)

Make Announcements (minor releases):
------------------------------------
- boson-devel@lists.sf.net
- sf.net news
- freshmeat

We depend on:
-------------
- kdelibs 3
- qt 3
- kdegames/libkdegames 3
- kdemultimedia 3
- maybe kdebase3
 --> never tried without kdebase!
- lib3ds
- OpenGL
- wml (compilation only! - for docs)

