dnl Check for an existing KGame installation. If existent kgame/kgame.h should
dnl be present
AC_DEFUN(AC_CHECK_KGAME,
[
AC_MSG_CHECKING([for kgame/kgame.h])
AC_FIND_FILE(kgame/kgame.h, $kde_includes, kgame)
if test "$kgame" = NO ; then
  AC_MSG_RESULT([no])
  AC_MSG_ERROR([kgame/kgame.h was not found. Please install kdegames/libkdegames first])
else
  AC_MSG_RESULT([$kgame])
fi
])
AC_CHECK_KGAME

dnl Temporary check: KDE Beta 1 doesn't have KShortcut
dnl AC_DEFUN(AC_CHECK_KSHORTCUT,
dnl [
dnl AC_FIND_FILE(kshortcut.h, $kde_includes, kshortcut)
dnl if test "$kshortcut" = NO || test -z "$kshortcut" ; then
dnl   AC_DEFINE_UNQUOTED(HAVE_KSHORTCUT, 0, [ ])
dnl else 
dnl   AC_DEFINE_UNQUOTED(HAVE_KSHORTCUT, 1, [ ])
dnl fi
dnl ])
dnl AC_CHECK_KSHORTCUT


dnl Temporary check: KDE Beta 1 doesn't have KGameProgress but KProgress
dnl AC_DEFUN(AC_CHECK_KGAMEPROGRESS,
dnl [
dnl AC_FIND_FILE(kgameprogress.h, $kde_includes, kgameprogress)
dnl if test "$kgameprogress" = NO ; then
dnl   AC_DEFINE_UNQUOTED(HAVE_KGAMEPROGRSS, 0, [ ])
dnl else 
dnl   AC_DEFINE_UNQUOTED(HAVE_KGAMEPROGRESS, 1, [ ])
dnl fi
dnl ])
dnl AC_CHECK_KGAMEPROGRESS


dnl TODO: we need to find out which version is installed and which we need
AC_DEFUN(AC_CHECK_LIB3DS,
[
AC_MSG_CHECKING([for lib3ds/file.h])
AC_FIND_FILE(lib3ds/file.h,  [$kde_incdirs], lib3ds)
if test "$lib3ds" = NO ; then
  AC_MSG_RESULT([no])
  AC_MSG_ERROR([lib3ds was not found. See http://lib3ds.sourceforge.net])
else
  AC_MSG_RESULT([$lib3ds])
fi
])
AC_CHECK_LIB3DS

AC_DEFUN(AC_HAVE_KGAME_VERSION,
[
AC_MSG_CHECKING([for kgame/kgameversion.h])
AC_FIND_FILE(kgame/kgameversion.h,  [$kde_incdirs], kgameversion_h)
if test "$kgameversion_h" = NO ; then
  AC_MSG_RESULT([no])
  AC_DEFINE_UNQUOTED(HAVE_KGAME_VERSION_H, 0, [ ])
else
  AC_MSG_RESULT([$kgameversion_h])
  AC_DEFINE_UNQUOTED(HAVE_KGAME_VERSION_H, 1, [ ])
fi
])
AC_HAVE_KGAME_VERSION


AC_DEFUN(AC_BOSON_HAVE_GL,
[
AC_HAVE_GL
if test "$ac_cv_have_gl" = "no"; then
  AC_MSG_ERROR([Cannot find OpenGL on your system! Maybe you need to install the development packages?])
fi
])
AC_BOSON_HAVE_GL


AC_DEFUN(AC_CHECK_KGAME_SAVEGAME,
[
dnl KGame::savegame() didn't exist in KDE 3.0 -> so we need to check for its existence
AC_MSG_CHECKING([for KGame::savegame()])
AC_LANG_SAVE
AC_LANG_CPLUSPLUS
bo_save_flags="$CXXFLAGS"
CXXFLAGS="$CXXFLAGS $all_includes"
AC_TRY_COMPILE([
  #include <kgame/kgame.h>
  #include <qdatastream.h>
  class Test : public KGame
  {
  public:
    void test()
    {
      QDataStream stream;
      savegame(stream, false, false);
    }
  protected:
    virtual bool playerInput(QDataStream&,KPlayer*){ return true;}
  };
],[
  Test g;
],kgame_savegame=yes,kgame_savegame=no)
AC_MSG_RESULT([$kgame_savegame])

CXXFLAGS="$bo_save_flags"
AC_LANG_RESTORE

if test "$kgame_savegame" != "yes"; then
  AC_DEFINE_UNQUOTED(HAVE_KGAME_SAVEGAME, 0, [ ])
else
  AC_DEFINE_UNQUOTED(HAVE_KGAME_SAVEGAME, 1, [ ])
fi
])
AC_CHECK_KGAME_SAVEGAME

AC_DEFUN(AC_BOSON_PREFIX,
[
  AC_DEFINE_UNQUOTED(BOSON_PREFIX, "$prefix", [ ])
])
AC_BOSON_PREFIX

