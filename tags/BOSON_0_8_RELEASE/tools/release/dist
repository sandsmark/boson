#!/bin/bash

BOSON_BASE="$HOME/kde/boson/release/head"
BOSON_TOOLS="$BOSON_BASE/tools"
BOSON_CODE="$BOSON_BASE/code"
BOSON_DATA="$BOSON_BASE/data"
BOSON_MUSIC="$BOSON_BASE/music"

BOSON_RELEASE="BOSON_0_8_RELEASE"

# Configuration ends here

BO_VERSION=$1
DEST_BASE="$PWD/$BO_VERSION"
DEST_ALL="$DEST_BASE/all/boson-all-$BO_VERSION"
DEST_CODE="$DEST_BASE/code/boson-code-$BO_VERSION"
DEST_DATA="$DEST_BASE/data/boson-data-$BO_VERSION"
DEST_MUSIC="$DEST_BASE/music/boson-music-$BO_VERSION"

function clean_all()
{
 echo "WARNING: this will do a"
 echo "      make -f $BOSON_TOOLS/admin/Makefile.common cvs-clean"
 echo "in the following directories:"
 for i in $BOSON_CODE $BOSON_DATA ; do
	echo "$i"
 done
 echo "Type \"yes\" to preceed. Otherwise we'll abort now"
 read answer
 if [ "x$answer" != "xyes" ]; then
	echo "Stopping"
	exit 1
 fi
 admindir="$BOSON_TOOLS/admin"
 echo "Doing cvs-clean now!"
 for i in $BOSON_CODE $BOSON_DATA ; do
	echo "In $i"
	cd $i && admindir=$admindir make -f $admindir/Makefile.common cvs-clean
 done
}

function copy_code()
{
 echo "Copying code"
 cp -a $BOSON_CODE/* $DEST_ALL/
 cp -a $BOSON_CODE/* $DEST_CODE/
 cp -a $BOSON_TOOLS/admin $DEST_CODE/
 cp -a $BOSON_TOOLS/admin $DEST_ALL/
}

function copy_data()
{
 echo "Copying data"
 # AB: UPDATE: we renamed map -> maps!
 # i HATE arts! it uses #included <map> which conflicts with our map dir. so we
 # need to install data into a separate directory
# DEST_ALL_DATA="$DEST_ALL/data"
# DEST_DATA_DATA="$DEST_DATA/data"
# mkdir $DEST_ALL_DATA
# mkdir $DEST_DATA_DATA
 dirs="`find $BOSON_DATA/. -type d -not -regex ".*CVS.*" -maxdepth 1 -mindepth 1`"
 for i in $dirs; do
	cp -a "$i" "$DEST_ALL/"
	subdirs="$subdirs `basename $i`"
 done
# echo "SUBDIRS=$subdirs" > $DEST_ALL_DATA/Makefile.am
 cp -rd $BOSON_DATA/* $DEST_DATA/


 cp -a $BOSON_TOOLS/admin $DEST_DATA/
# cp $BOSON_CODE/Makefile.cvs $DEST_DATA/
}

function copy_music()
{
 echo "Copying music"
# allfiles is a safety check to ensure that the music is not yet extracted. if
# it is we warn - this is not an error, but we will use .tar.bz2 files only.
 allfiles=`find $BOSON_MUSIC -not -regex "\.\." -not -regex "\.\.\." -not -regex ".*\.tar\.bz2" -not -regex "$BOSON_MUSIC"`
 for i in $allfiles; do
	echo "WARNING: $BOSON_MUSIC should contain .tar.bz2 files only! Found: $i"
 done
 files=`find $BOSON_MUSIC -type f -name "*.bz2"`
 mkdir -p $DEST_MUSIC
# mkdir -p $DEST_ALL/data
# mkdir -p $DEST_MUSIC/data
 if [ -z "$files" ]; then
	echo "WARNING: no music files found in $BOSON_MUSIC!"
	echo "You should place the music as valid .tar.bz2 files here (see data/music/README for general info about this)"
	echo "Will skip music files completely - do NOT release the generated packages! They will be broken (esp. the -all package)"
	sleep 4
	return;
 fi
 for i in $files; do
	cd $DEST_ALL && tar xjvf $i > /dev/null || exit 1
	cd $DEST_MUSIC && tar xjvf $i > /dev/null || exit 1
 done
# echo "SUBDIRS=music" > $DEST_MUSIC/data/Makefile.am
 cp $BOSON_DATA/music/Makefile.am $DEST_MUSIC/music/
 cp -r $BOSON_TOOLS/admin $DEST_MUSIC/
 cp $BOSON_CODE/Makefile.cvs $DEST_MUSIC/
 cp $BOSON_CODE/Makefile.am $DEST_MUSIC/
 #TODO: use a modified version of this! we really don't need to check for this stuff
 cp $BOSON_CODE/configure.in.in $DEST_MUSIC/
 for i in INSTALL COPYING AUTHORS ChangeLog NEWS README ; do
	echo "See code/$i" > $DEST_MUSIC/$i
 done
}

function prepare_makefiles()
{
 echo "Preparing Makefiles"
 for i in $DEST_ALL $DEST_CODE $DEST_DATA $DEST_MUSIC; do
	echo "make -f admin/Makefile.common dist in $i"
	cd $i && make -f admin/Makefile.common dist || exit 1
	# it seems as if we don't need this anymore
	cd $i && rm -rf $i/autom4te.cache
 done
}



# first test if all param/paths are correct and update from cvs
if [ "$1" = "" ]; then
	echo "Usage: $0 version"
	exit 1
fi;

if [ -d "$PWD/$1" ]; then
	echo "$PWD/$1 already exists"
	exit 1
fi

if [ ! -d "$BOSON_CODE" ]; then
	echo "$BOSON_CODE doesn't exist"
	exit 1
fi
if [ ! -d "$BOSON_DATA" ]; then
	echo "$BOSON_DATA doesn't exist"
	exit 1
fi
if [ ! -d "$BOSON_MUSIC" ]; then
	echo "Didn't find music dir $BOSON_MUSIC"
	exit 1
fi

if [ "x$BOSON_RELEASE" != "x" ]; then
	echo "Updating $BOSON_TOOLS"
	cd $BOSON_TOOLS && cvs up -r $BOSON_RELEASE
	echo "Updating $BOSON_CODE"
	cd $BOSON_CODE && cvs up -r $BOSON_RELEASE
	echo "Updating $BOSON_DATA"
	cd $BOSON_DATA && cvs up -r $BOSON_RELEASE
else
	echo "No BOSON_RELEASE version specified, won't update from cvs but rather use existing sources."
	echo "Do NOT use this as a release version!!"
	sleep 3
fi


echo "Generate release files for $BO_VERSION in $PWD/$BO_VERSION"
echo "Ensure that the CVS dirs contain anonymous access only!!"
# TODO use an anon script, like in kde-common

# do a make cvs-clean first
clean_all

mkdir -p $DEST_ALL
mkdir -p $DEST_CODE
mkdir -p $DEST_DATA
mkdir -p $DEST_MUSIC

# copy the code first
copy_code

# now the data
copy_data

# and the music
copy_music

# remove all CVS dirs and .cvsignore files since we mixed several modules and so they are useless
# ONLY in $DEST_ALL - the others contain anonymous cvs files
find $DEST_ALL -type d -name "CVS" | xargs rm -rf
find $DEST_ALL -type f -name ".cvsignore" | xargs rm

# user is meant to do ./configure ; make ; make install only
prepare_makefiles

# check that all is correct:
for dir in $DEST_ALL $DEST_CODE $DEST_DATA $DEST_MUSIC; do
	for i in `find $dir -type f -name "*.o"`; do
		echo "Oops: found .o file: $i"
		exit 1
	done
	for i in `find $dir -type d -name ".deps"`; do
		echo "Oops: found .deps dir: $i"
		exit 1
	done
	for i in `find $dir -type d -name ".libs"`; do
		echo "Oops: found .libs dir: $i"
		exit 1
	done
done

# create the packages
cd $DEST_ALL/../
tar cjvf boson-all-$BO_VERSION.tar.bz2 boson-all-$BO_VERSION/ > /dev/null || exit 1
mv boson-all-$BO_VERSION.tar.bz2 $DEST_BASE/

cd $DEST_CODE/../
tar cjvf boson-code-$BO_VERSION.tar.bz2 boson-code-$BO_VERSION/ > /dev/null || exit 1
mv boson-code-$BO_VERSION.tar.bz2 $DEST_BASE/

cd $DEST_DATA/../
tar cjvf boson-data-$BO_VERSION.tar.bz2 boson-data-$BO_VERSION/ > /dev/null || exit 1
mv boson-data-$BO_VERSION.tar.bz2 $DEST_BASE/

cd $DEST_MUSIC/../
tar cjvf boson-music-$BO_VERSION.tar.bz2 boson-music-$BO_VERSION/ > /dev/null || exit 1
mv boson-music-$BO_VERSION.tar.bz2 $DEST_BASE/

